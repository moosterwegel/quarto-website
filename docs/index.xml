<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Max Oosterwegel -- blog ( ._.)</title>
<link>https://maxoosterwegel.com/</link>
<atom:link href="https://maxoosterwegel.com/index.xml" rel="self" type="application/rss+xml"/>
<description>Blog Max Oosterwegel ( ._.)</description>
<generator>quarto-1.7.27</generator>
<lastBuildDate>Sun, 04 May 2025 22:00:00 GMT</lastBuildDate>
<item>
  <title>The advantages of conditional logistic regression in (metabol)omic matched case-control studies</title>
  <dc:creator>Max J. Oosterwegel</dc:creator>
  <link>https://maxoosterwegel.com/posts/conditional-logistic-regression-omics/</link>
  <description><![CDATA[ 




<p>Conditional logistic regression<sup>1</sup> is a classic tool in an epidemiologist’s toolkit. It’s usually used to analyse matched case-control studies. However, popular methodological guidance has either explicitly advocated for ‘breaking’ the matching and using ordinary logistic models instead, or has sometimes been interpreted that way, with the justification being potential small precision gains (<span class="citation" data-cites="pearce2016">Pearce (2016)</span>). In this blog post I want to demonstrate the advantages that conditional logistic regression can have in well-designed matched case-control studies of omic data that contain a substantial amount of technical variation.</p>
<section id="the-example-study" class="level1">
<h1>The example study</h1>
<p>Let’s consider the following hypothetical omics study. Cases are 1:1 matched to controls on important covariates. Crucially, the case-control pairs are then block randomized over the analytical assay. That is, the matched pairs (blocks) are randomized over the plates and batches, and within the block we randomize the position of the case or control. In visual form where the numbers correspond to the matched pair:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplate)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(data_continuous_96)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb1-6">block_possibilities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb1-7"></span>
<span id="cb1-8">data_continuous_96 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_continuous_96 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-9">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">case =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(block_possibilities, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))),</span>
<span id="cb1-10">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">case =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(case <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Case'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Control'</span>),</span>
<span id="cb1-11">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pair =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb1-12">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span>))</span>
<span id="cb1-13"></span>
<span id="cb1-14">data_continuous_96 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-15">  ggplate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plate_plot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> well,</span>
<span id="cb1-16">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> case,</span>
<span id="cb1-17">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> pair,</span>
<span id="cb1-18">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'skyblue'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'orange'</span>),</span>
<span id="cb1-19">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plate_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span>,</span>
<span id="cb1-20">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plate_type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"round"</span>,</span>
<span id="cb1-21">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://maxoosterwegel.com/posts/conditional-logistic-regression-omics/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="analysing-matched-data" class="level1">
<h1>Analysing matched data</h1>
<p>This design ensures that the case and its matched control are processed consecutively and as such are processed under highly similar laboratory conditions (same plate, same batch, adjacent wells, similar time). However, the matching process has also introduced a bias – we have forced the controls to be more like the cases than they otherwise would be. This needs to be taken into account. I will show how epidemiologists do this before illustrating why conditional logistic regression is an elegant solution to technical variation.</p>
<section id="stratum-specific" class="level2">
<h2 class="anchored" data-anchor-id="stratum-specific">Unconditional logistic regression: dummy variables</h2>
<p>One way to handle the bias from the matching process is by including dummy variables for all matched sets, effectively fitting a stratum-specific logistic regression model. In this model, the probability (<img src="https://latex.codecogs.com/png.latex?%5Cpi">) of being a case within matched set <img src="https://latex.codecogs.com/png.latex?k"> depends on the predictors <img src="https://latex.codecogs.com/png.latex?x"> and a unique intercept <img src="https://latex.codecogs.com/png.latex?%5Calpha_k"> for that specific set:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cpi_k(%5Cmathbf%7Bx%7D)=%5Cfrac%7B%5Cmathrm%7Be%7D%5E%7B%5Calpha_k+%5Cboldsymbol%7B%5Cbeta%7D%5E%7B%5Cprime%7D%20%5Cmathbf%7Bx%7D%7D%7D%7B1+%5Cmathrm%7Be%7D%5E%7B%5Calpha_k+%5Cboldsymbol%7B%5Cbeta%7D%5E%7B%5Cprime%7D%20%5Cmathbf%7Bx%7D%7D%7D%0A"> <img src="https://latex.codecogs.com/png.latex?%5Calpha_k"> represents the baseline log-odds of being a case that are specific to stratum <img src="https://latex.codecogs.com/png.latex?k">, capturing the effects of the matching factors and any other unmeasured matching set characteristics. <img src="https://latex.codecogs.com/png.latex?%5Cbeta"> represents the log-odds ratios for the predictors <img src="https://latex.codecogs.com/png.latex?x">, assumed to be constant across strata (<span class="citation" data-cites="hosmer2013">Hosmer, Lemeshow, and Sturdivant (2013)</span>).</p>
<p>This is somewhat feasible for large matching sets (i.e.&nbsp;many controls per case). However, such a fully stratified likelihood will need (<img src="https://latex.codecogs.com/png.latex?n/2%20-%201">) extra parameters for 1:1 matched sets. This will lead to bias when using maximum likelihood because the number of parameters increases at the same rate as the sample size <span class="citation" data-cites="breslow1980 hosmer2013">(see Breslow and Day 1980, sec. 7.1; also Hosmer, Lemeshow, and Sturdivant 2013, chap. 7)</span>.</p>
</section>
<section id="unconditional-logistic-regression-breaking-matching" class="level2">
<h2 class="anchored" data-anchor-id="unconditional-logistic-regression-breaking-matching">Unconditional logistic regression: breaking matching</h2>
<p>Because of this bias, unconditional logistic regression with dummy variables is rarely used in epidemiology. More common is an unconditional logistic regression where the matching set indicators are not explicitly modeled. Instead, the matching is broken and the variables that were used for matching are added as predictor to the logistic model. Matched sets indicators are thus omitted. This approach also utilizes contrasts between matched pairs and pairs with only a control or case in it still contribute to the analysis.</p>
</section>
<section id="conditional-logistic-regression" class="level2">
<h2 class="anchored" data-anchor-id="conditional-logistic-regression">Conditional logistic regression</h2>
<p>Another approach is conditional logistic regression (CLR). Instead of trying to estimate the potentially numerous stratum-specific intercepts (<img src="https://latex.codecogs.com/png.latex?%5Calpha_k">) from the dummy variable model, CLR treats them as nuisance parameters and disregards their estimation such that we can use methods for conditional inference to create a likelihood function. After some derivation<sup>2</sup>, the conditional likelihood for the matched set <img src="https://latex.codecogs.com/png.latex?k"> looks as follows for a 1:1 matched study design:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Al_k(%5Cboldsymbol%7B%5Cbeta%7D)=%5Cfrac%7B%5Cmathrm%7Be%7D%5E%7B%5Cbeta%5E%7B%5Cprime%7D%20%5Cmathbf%7Bx%7D_%7B1%20k%7D%7D%7D%7B%5Cmathrm%7Be%7D%5E%7B%5Cbeta%5E%7B%5Cprime%7D%20%5Cmathbf%7Bx%7D_%7B1%20k%7D%7D+%5Cmathrm%7Be%7D%5E%7B%5Cbeta%5E%7B%5Cprime%7D%20%5Cmathbf%7Bx%7D_%7B0%20k%7D%7D%7D%20.%0A"> Where <img src="https://latex.codecogs.com/png.latex?x_1"> and <img src="https://latex.codecogs.com/png.latex?x_0"> correspond to the data from the case and control of a matched set <img src="https://latex.codecogs.com/png.latex?k"> respectively, and <img src="https://latex.codecogs.com/png.latex?%5Cbeta"> is the only unknown parameter (your exposure for example). In other words, this conditional likelihood is the probability that, within matched set <img src="https://latex.codecogs.com/png.latex?k">, the case is in fact the case if we assume a stratum-specific logistic regression model. The full conditional likelihood can be obtained here by taking the product of the likelihoods for each matched set (or summing the log-likelihoods of course).</p>
<p>The important thing to remember for my argument is that – <u>contrary to logistic regression where we break the matching – the effect of a predictor is only measured relative to the values in its matched set rather than relative to all values of the predictor</u> (<span class="citation" data-cites="hosmer2013">Hosmer, Lemeshow, and Sturdivant (2013)</span>). In standard epidemiology training, this is expressed as ‘only disconcordant pairs contribute information to the analysis’. This is also why such training mentions that you cannot analyse factors that were matched on – these values are constant within a pair and this estimator is thus undefined.</p>
<p>In <code>R</code> you can easily fit a CLR by writing <code>survival::clogit(is_case ~ 1 + survival::strata(pair) + x, data = df)</code><sup>3</sup>.</p>
</section>
</section>
<section id="technical-variation" class="level1">
<h1>Technical variation</h1>
<p>Next, let’s look at an example of (substantial) technical variation in an omics study. An untargeted metabolomic study in particular. The design was as outlined previously. In total, samples were processed in four batches consisting of five plates each. And because the samples were randomized over the assay we can safely assume that in expectation all these observations should randomly vary around a common mean. In other words, we should see no systemic trends along injection order. However, as you can see below, it seems that we have more than just random variation, because there is systematic variation by for example batch (see the different means for the batches (each panel is a batch, panels next to each other are consecutive batches)).</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> readr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'example_data.csv'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show_col_types =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb2-2"></span>
<span id="cb2-3">plot_feature <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(df, outcome) {</span>
<span id="cb2-4">  df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> inj_nr_in_batch, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .data[[outcome]])) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> status)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-7">    see<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_okabeito</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>batch, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Injection number in batch'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log(x)'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'none'</span>)</span>
<span id="cb2-13">}</span>
<span id="cb2-14"></span>
<span id="cb2-15">df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(x1)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_feature</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log_x'</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://maxoosterwegel.com/posts/conditional-logistic-regression-omics/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="adjustment" class="level1">
<h1>Adjustment</h1>
<p>Now, let’s try to remove this technical variation. We can do easily do this using a random intercept model. This aligns well with the aforementioned assumption of random variation around a common mean. The first model that I will try, will adjust for the batch effect:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">m1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lme4<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lmer</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(x1) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> status <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>batch), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df)</span>
<span id="cb3-2">df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-3">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tech_var =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(m1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">random.only =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>), </span>
<span id="cb3-4">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_x_adj =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(x1) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> tech_var) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_feature</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log_x_adj'</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://maxoosterwegel.com/posts/conditional-logistic-regression-omics/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>The batches now have a common mean, but there’s still substantial amount of variation along injection order. Let’s see if these are simply plate effects or something more complicated:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">m2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lme4<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lmer</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(x1) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> status <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>batch<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>plate_nested_coding), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df)</span>
<span id="cb4-2">df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-3">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tech_var =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(m2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">random.only =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>), </span>
<span id="cb4-4">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_x_adj =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(x1) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> tech_var) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_feature</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log_x_adj'</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://maxoosterwegel.com/posts/conditional-logistic-regression-omics/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Even though we did a pretty good job of eliminating the technical variation – at least visually speaking – I think that no matter how extensively we model and adjust for this variation, the remaining variation will be greater than the technical drift over just one position in the data. And this variation over one position is precisely the only (technical) variation that the CLR will utilize in our well designed example study. That is, in CLR we condition on the matched pair and both the case and control in the pair are approximately equally affected by the technical variation and this variation thus gets cancelled out. We have essentially matched on the technical variation. And in CLR these factors that are constant across a match set are adjusted away – even the unobserved ones!</p>
</section>
<section id="caveats-and-other-designs" class="level1">
<h1>Caveats and other designs</h1>
<p>In this blog post, we saw that the key to dealing with technical variation in a case control design was (1) recognizing that technical variation over one position is likely minimal (relative to the total amount of technical variation) (2) recognizing that both measured and unmeasured factors in CLR are adjusted away (3) randomly locating a case and its control next to each other such that the technical variation would be minimal.</p>
<p>I think that all of this could be contingent on the total total amount of (exposure) variation in study, because sometimes contrasts between groups can be much larger than within groups and as such contribute more information to the analysis. I should probably run some simulations to check that (shouldn’t we all?).</p>
<p>There are of course many other designs than case-control studies. The case-cohort design for example. I do not have experience with case-cohort designs, but I do know that they are gaining popularity in environmental epidemiological omics studies because they easily allow for secondary analyses contrary to case-control studies (<span class="citation" data-cites="lin_proper_2009">Lin and Zeng (2009)</span>, <span class="citation" data-cites="obrien_case_2022">O’Brien, Lawrence, and Keil (2022)</span>). I would be interested to know examples of similar clever designs that mitigate the impact of technical variation in those types of studies.</p>



</section>


<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-breslow1980" class="csl-entry">
Breslow, Norman E, and Nicholas E Day. 1980. <em>Statistical Methods in Cancer Research Volume i: The Analysis of Case-Control Studies</em>. International Agency for Research on Cancer Scientific Publications. Lyon, France: International Agency for Research on Cancer.
</div>
<div id="ref-hosmer2013" class="csl-entry">
Hosmer, David W, Stanley Lemeshow, and Rodney X Sturdivant. 2013. <em>Applied Logistic Regression</em>. 3rd ed. Wiley Series in Probability and Statistics. Wiley-Blackwell.
</div>
<div id="ref-lin_proper_2009" class="csl-entry">
Lin, D. Y., and D. Zeng. 2009. <span>“Proper Analysis of Secondary Phenotype Data in Case-Control Association Studies.”</span> <em>Genetic Epidemiology</em> 33 (3): 256–65. <a href="https://doi.org/10.1002/gepi.20377">https://doi.org/10.1002/gepi.20377</a>.
</div>
<div id="ref-obrien_case_2022" class="csl-entry">
O’Brien, Katie M., Kaitlyn G. Lawrence, and Alexander P. Keil. 2022. <span>“The Case for Case-Cohort: <span>An</span> Applied Epidemiologist’s Guide to Re-Framing Case-Cohort Studies to Improve Usability and Flexibility.”</span> <em>Epidemiology (Cambridge, Mass.)</em> 33 (3): 354–61. <a href="https://doi.org/10.1097/EDE.0000000000001469">https://doi.org/10.1097/EDE.0000000000001469</a>.
</div>
<div id="ref-pearce2016" class="csl-entry">
Pearce, Neil. 2016. <span>“Analysis of Matched Case-Control Studies.”</span> <em>BMJ</em>, February, i969. <a href="https://doi.org/10.1136/bmj.i969">https://doi.org/10.1136/bmj.i969</a>.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>In other fields also known as the <a href="https://www.metafor-project.org/doku.php/analyses">hypergeometric-normal model</a>, or as a <a href="https://www.stata.com/manuals/rclogit.pdf">‘fixed-effects logit model for panel data’</a>.↩︎</p></li>
<li id="fn2"><p>When deriving this conditional likelihood from the stratum-specific logistic model (which includes <img src="https://latex.codecogs.com/png.latex?%5Calpha">) the <img src="https://latex.codecogs.com/png.latex?%5Calpha_k"> term (representing the combined baseline risk and effects of all factors constant within matching set <img src="https://latex.codecogs.com/png.latex?k">, including matching variables) appears in both the numerator and denominator and thus mathematically cancels out. This cancellation is why we often say these matching set-constant effects are “absorbed” into a cluster-specific intercept; they are removed from the likelihood equation that needs to be solved. See <span class="citation" data-cites="hosmer2013">Hosmer, Lemeshow, and Sturdivant (2013)</span>, chap.&nbsp;7 for more details on this derivation.↩︎</p></li>
<li id="fn3"><p>Under the hood, this function is a wrapper around <code>coxph</code> because the <a href="https://stat.ethz.ch/R-manual/R-devel/library/survival/html/clogit.html">log likelihood of a conditional logistic regression is the same as a Cox model with a specific data structure</a>. Apparently, you can also – in some cases (?) – fit a conditional logistic regression model <a href="https://www.metafor-project.org/doku.php/tips:clogit_paired_binary_data">using a generalized linear mixed model with particular random intercepts structure</a>.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{j._oosterwegel2025,
  author = {J. Oosterwegel, Max},
  title = {The Advantages of Conditional Logistic Regression in
    (Metabol)omic Matched Case-Control Studies},
  date = {2025-05-05},
  url = {https://maxoosterwegel.com/posts/conditional-logistic-regression-omics/},
  doi = {placeholder},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-j._oosterwegel2025" class="csl-entry quarto-appendix-citeas">
J. Oosterwegel, Max. 2025. <span>“The Advantages of Conditional Logistic
Regression in (Metabol)omic Matched Case-Control Studies.”</span> May 5,
2025. <a href="https://doi.org/placeholder">https://doi.org/placeholder</a>.
</div></div></section></div> ]]></description>
  <guid>https://maxoosterwegel.com/posts/conditional-logistic-regression-omics/</guid>
  <pubDate>Sun, 04 May 2025 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Imputing and removing technical variation in left censored metabolomic data</title>
  <dc:creator>Max J. Oosterwegel</dc:creator>
  <link>https://maxoosterwegel.com/posts/impute-and-remove-technical-variation-metabolomics/</link>
  <description><![CDATA[ 




<p>The field of environmental epidemiology has made significant investments in untargeted (also known as nontargeted) metabolomics over the past few years, to gain deeper insights into exposure levels, biological mechanisms, and their relationship to disease. These investments are starting to pay dividends by enabling larger studies, but this scale-up comes with its own challenges. With sample sizes growing substantially, processing all study samples in a single batch is no longer feasible, forcing analyses to span longer periods. These extended timeframes introduce greater variation in technical, non-biological factors that contaminate the data with unwanted variation. Additionally, as I’ve discussed in <a href="../..\posts/left-censored-models-showcase/">a previous post</a>, this metabolomic data is often left censored, creating further analytical challenges. In this post, I’ll share a method I developed that handles both the imputation of nondetects and the removal of technical variation in one and the same model<sup>1</sup>.</p>
<section id="technical-variation-in-untargetednontargeted-metabolomics" class="level1">
<h1>Technical variation in untargeted/nontargeted metabolomics</h1>
<p>To illustrate the model, I will start with simulating some left censored data that contains batch and plate effects (an example of technical variation). In this model, the study samples are processed in (100-well) plates that are nested within the batches. A proportion of these values will be censored. The censoring point (limit of detection) will differ per batch:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span></span>
<span id="cb1-2">samples_p_batch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span></span>
<span id="cb1-3">samples_p_plate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb1-4"></span>
<span id="cb1-5">nr_batches <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> n<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>samples_p_batch</span>
<span id="cb1-6">nr_plates <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> nr_batches <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (samples_p_batch<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>samples_p_plate) </span>
<span id="cb1-7"></span>
<span id="cb1-8">mu <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span></span>
<span id="cb1-9">sd_batch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span></span>
<span id="cb1-10">sd_plate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb1-11">sd <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-12">b_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1234</span>)</span>
<span id="cb1-15">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n)</span>
<span id="cb1-16"></span>
<span id="cb1-17">re_batch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(nr_batches, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sd_batch), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> samples_p_batch)</span>
<span id="cb1-18">re_plate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(nr_plates, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sd_plate), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> samples_p_plate)</span>
<span id="cb1-19">re <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> re_batch <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> re_plate</span>
<span id="cb1-20">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rlnorm</span>(n, mu <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> re, sd)</span>
<span id="cb1-21"></span>
<span id="cb1-22">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(y, x, </span>
<span id="cb1-23">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">batch_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nr_batches, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> samples_p_batch))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-24">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(batch_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-25">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lod =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(y, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)),</span>
<span id="cb1-26">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">censored =</span> y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> lod,</span>
<span id="cb1-27">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_obs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(censored, lod, y),</span>
<span id="cb1-28">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_lod =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(lod),</span>
<span id="cb1-29">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(y),</span>
<span id="cb1-30">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_y_obs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(y_obs),</span>
<span id="cb1-31">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plate_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(samples_p_batch<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>samples_p_plate), </span>
<span id="cb1-32">                                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> samples_p_plate))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-33">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-34">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inj_order =</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row_number</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-35">  tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unite</span>(plate_nested_coding, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(batch_id, plate_id), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">remove =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) </span></code></pre></div>
</div>
<!-- # ```{r} -->
<!-- # df |>  -->
<!-- #   ggplot(aes(inj_order, log_y)) +  -->
<!-- #   see::scale_color_bluebrown() + -->
<!-- #   geom_point(aes(color = batch_id)) +  -->
<!-- #   labs(x = x_lab, y = y_lab) + -->
<!-- #   theme_minimal() + -->
<!-- #   theme(legend.position = 'top') -->
<!-- # ``` -->
<p>The plot below shows the technical variation (the different colors correspond to different batches) and the left censored nature of the (untargeted) metabolic data. The data is left censored because our instruments don’t have unlimited sensitivity. Due to left censoring (dashed line), we observe only part of the distribution. Without the variation introduced by the different batches and plates the distribution would be much narrower. It’s also interesting to see that you can have an apparent drift over time that’s just the consequence of random variation between batches.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb2-2">x_lab <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Injection order"</span></span>
<span id="cb2-3">y_lab <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span></span>
<span id="cb2-4"></span>
<span id="cb2-5">sub_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Ideally the data looks like this (no censoring or batch-effects)'</span></span>
<span id="cb2-6">sub_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reality: there are batch effects'</span></span>
<span id="cb2-7">sub_3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Reality: there are batch effects + censoring due to detection limits"</span></span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># via https://github.com/easystats/see/blob/main/R/scale_color_bluebrown.R</span></span>
<span id="cb2-10">bluebrown_colors_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb2-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lightblue =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#6DC0E0"</span>,</span>
<span id="cb2-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">darkbrown =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#391D07"</span>,</span>
<span id="cb2-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">blue =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#5B93AE"</span>,</span>
<span id="cb2-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lightbrown =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#92673C"</span>,</span>
<span id="cb2-15">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">darkblue =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#1F4454"</span>,</span>
<span id="cb2-16">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">brown =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#61381A"</span></span>
<span id="cb2-17">)</span>
<span id="cb2-18"></span>
<span id="cb2-19">linewidth <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1</span></span>
<span id="cb2-20">nr_bins <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span></span>
<span id="cb2-21">axis_range_bins <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">420</span></span>
<span id="cb2-22"></span>
<span id="cb2-23">df_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-24">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_y_no_batch =</span> log_y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> re,</span>
<span id="cb2-25">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_y_lab =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(censored, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, log_y_obs)) </span>
<span id="cb2-26"></span>
<span id="cb2-27">batch_lod_hline <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(df_plot, nr_batches, samples_p_batch, linewidth, ...) {</span>
<span id="cb2-28">  batches <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(df_plot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>batch_id))</span>
<span id="cb2-29">  </span>
<span id="cb2-30">  segments <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nr_batches, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(i) {</span>
<span id="cb2-31">    batch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> batches[i]</span>
<span id="cb2-32">    batch_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_plot[df_plot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>batch_id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> batch, ]</span>
<span id="cb2-33">    lod_value <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(batch_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log_lod)</span>
<span id="cb2-34">    </span>
<span id="cb2-35">    x_start <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (i<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> samples_p_batch <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-36">    x_end <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> samples_p_batch</span>
<span id="cb2-37">    </span>
<span id="cb2-38">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb2-39">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> lod_value,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> lod_value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_start, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> x_end), </span>
<span id="cb2-40">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> linewidth, ...),</span>
<span id="cb2-41">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> lod_value,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> lod_value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_end, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(df_plot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>inj_order)), </span>
<span id="cb2-42">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> linewidth <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, ...)</span>
<span id="cb2-43">    )</span>
<span id="cb2-44">  })</span>
<span id="cb2-45">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do.call</span>(list, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(segments, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">recursive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)))</span>
<span id="cb2-46">}</span>
<span id="cb2-47"></span>
<span id="cb2-48">p01a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-49">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> inj_order, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> log_y_no_batch, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> batch_id)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-50">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-51">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log_y), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log_y))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-52">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unname</span>(bluebrown_colors_list)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-53">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-54">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'none'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-55">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_lab, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y_lab, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> sub_1)</span>
<span id="cb2-56"></span>
<span id="cb2-57">p02a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-58">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> inj_order, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> log_y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> batch_id)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-59">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-60">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log_y), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log_y))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-61">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unname</span>(bluebrown_colors_list)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-62">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-63">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'none'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-64">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_lab,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y_lab, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> sub_2)</span>
<span id="cb2-65"></span>
<span id="cb2-66">p03a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-67">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> inj_order, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> log_y_lab, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> batch_id)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-68">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-69">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(df_plot, censored), </span>
<span id="cb2-70">             <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> inj_order, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> log_y), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#dbdbdb'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-71">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">batch_lod_hline</span>(df_plot, nr_batches, samples_p_batch,</span>
<span id="cb2-72">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> linewidth, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dashed'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-73">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log_y), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log_y))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-74">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unname</span>(bluebrown_colors_list)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-75">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-76">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'none'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-77">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_lab, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y_lab, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> sub_3)</span>
<span id="cb2-78"></span>
<span id="cb2-79">p01b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-80">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> log_y_no_batch)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-81">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> nr_bins, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-82">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log_y), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log_y))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-83">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, axis_range_bins)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-84">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_flip</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-85">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>()</span>
<span id="cb2-86"></span>
<span id="cb2-87">p02b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-88">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> log_y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-89">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> nr_bins, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-90">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log_y), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log_y))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-91">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, axis_range_bins)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-92">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_flip</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-93">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>()</span>
<span id="cb2-94"></span>
<span id="cb2-95">p03b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-96">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> log_y_lab)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-97">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> nr_bins, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-98">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> log_lod), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dashed'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> linewidth <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-99">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log_y), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log_y))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-100">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, axis_range_bins)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-101">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_flip</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-102">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>()</span>
<span id="cb2-103"></span>
<span id="cb2-104"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(patchwork)</span>
<span id="cb2-105">p01 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p01a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p01b <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_layout</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">widths =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) </span>
<span id="cb2-106">p02 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p02a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p02b <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_layout</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">widths =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) </span>
<span id="cb2-107">p03 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p03a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p03b <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_layout</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">widths =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb2-108"></span>
<span id="cb2-109">p01 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> p02 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> p03 </span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://maxoosterwegel.com/posts/impute-and-remove-technical-variation-metabolomics/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="the-status-quo-of-imputation-and-technical-variation-adjustment" class="level1">
<h1>The status quo of imputation and technical variation adjustment</h1>
<p>As I tried to illustrate using these plots, technical variation and left censoring due to limits of detection (LOD) can be significant hurdles in metabolomics analysis. Yet, read method sections in the literature, and you’ll often find they’re treated like an afterthought. If addressed at all, methods sections will often only briefly state: ‘batch effects were removed using ComBat’ (despite ComBat fundamentally ignoring the censored nature of data below the LOD) or ‘data was imputed using methods X or Y’ (referencing imputation techniques like those by Lubin et al.&nbsp;or Lazar et al.&nbsp;which focus solely on left censoring without inherently handling batch effects).</p>
<p>Furthermore, these references to ‘foundational’ imputation methods (like those by Lubin et al.&nbsp;or Lazar et al.) typically lack specifics on the exact imputation model; they neither detail which variables were included in the current study’s imputation nor do the original papers offer clear guidance on which should be included (because it wasn’t the goal of those papers). However, this is important for the analyst and the reader to know, as imputation models and the models for the subsequent analysis need to be congenial – meaning the imputation must account for the relationships you intend to study later. The variables included in imputation can matter greatly!</p>
</section>
<section id="why-a-unified-model-is-better" class="level1">
<h1>Why a unified model is better</h1>
<p>Moreover, I will argue that the imputation and technical variation adjustment is best done in one and the same model, because the technical variation and left censoring are often intertwined. Namely, the same technical factors causing batch-to-batch (or plate-to-plate) shifts in metabolite levels can also influence instrument sensitivity or baseline noise, thereby changing the effective LOD for different batches. This means that you cannot obtain an unbiased estimate of the technical variation without modeling the left censoring, or the left censoring (imputes) without modeling the the technical variation.</p>
<p>In other words, if you adjust for batch effects before imputation (e.g., using methods like ComBat that ignore censoring), you are applying adjustments to data that either contains arbitrary placeholders for non-detects (like LOD/2) or simply ignores the information that the true value is below a certain batch-specific threshold. This distorts the estimation of the batch effect itself. And the higher proportion of nondetects, the worse this bias can get.</p>
<p>One might also consider a seemingly pragmatic two-step approach: first, perform multiple imputation using a model that accounts for batch-specific LODs and includes batch and plate effects (perhaps as fixed effects<sup>2</sup>); second, fit a separate mixed model to each imputed dataset to estimate and remove these batch effects. However, this sequential process introduces several statistical challenges compared to a unified model: * Treating batch effects as fixed during imputation (often a limitation of available software for censored models) but then as random during the adjustment step creates a conceptual mismatch in how technical variation is modeled and removed. * Estimating imputation parameters and batch effects sequentially can be less statistically efficient than a unified model where all parameters are estimated simultaneously, allowing information to be shared across all model components.</p>
<p>Therefore, a unified model that simultaneously estimates the technical variation and performs the imputation using batch-specific LOD information is better able to obtain unbiased estimates of both the true underlying metabolite levels and the relationships with outcomes or exposures. The <code>brms</code> model presented below is a way to implement such a unified model.</p>
</section>
<section id="a-brms-model" class="level1">
<h1>A {brms} model</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">nr_imputations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb3-2">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> brms<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> log_y_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cens</span>(left_cens) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>batch_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>plate_nested_coding), </span>
<span id="cb3-3">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">left_cens =</span> censored <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), </span>
<span id="cb3-4">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cores =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2025</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb3-5">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">backend =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cmdstanr'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 1 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 2 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 3 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 4 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 2 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 2 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 3 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 3 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 4 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 4 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 3 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 3 finished in 60.5 seconds.
Chain 1 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 1 finished in 61.0 seconds.
Chain 2 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 2 finished in 63.4 seconds.
Chain 4 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 4 finished in 66.4 seconds.

All 4 chains finished successfully.
Mean chain execution time: 62.8 seconds.
Total execution time: 66.6 seconds.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">total_nr_draws <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> brms<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ndraws</span>(m) </span>
<span id="cb5-2">samples_to_draw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(total_nr_draws, nr_imputations))</span>
<span id="cb5-3">sigma_draws <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(m, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">draw =</span> samples_to_draw) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>()</span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># do not include technical variation in draws (= implicitly removing it)</span></span>
<span id="cb5-6">mu_draws <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> brms<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">posterior_linpred</span>(m, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">re_formula =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">draw_ids =</span> samples_to_draw) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>() </span>
<span id="cb5-7"></span>
<span id="cb5-8">re_draws <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> brms<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">posterior_linpred</span>(m, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">re_formula =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">draw_ids =</span> samples_to_draw) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> </span>
<span id="cb5-9">  brms<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">posterior_linpred</span>(m, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">re_formula =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">draw_ids =</span> samples_to_draw) </span>
<span id="cb5-10">re_draws <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(re_draws)</span>
<span id="cb5-11"></span>
<span id="cb5-12">imputed_sets <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(y), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> nr_imputations)</span>
<span id="cb5-13"></span>
<span id="cb5-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nr_imputations) {</span>
<span id="cb5-15">  mu <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mu_draws[, i]</span>
<span id="cb5-16">  sd <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sigma_draws[i]</span>
<span id="cb5-17">  </span>
<span id="cb5-18">  batch_effect <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> re_draws[, i]</span>
<span id="cb5-19">  lod_adjusted <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log_lod'</span>]] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> batch_effect</span>
<span id="cb5-20">  </span>
<span id="cb5-21">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># draw values below lod</span></span>
<span id="cb5-22">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## what percentiles belong to start with these params</span></span>
<span id="cb5-23">  unif_lower <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pnorm</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Inf</span>, mu, sd)</span>
<span id="cb5-24">  unif_upper <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pnorm</span>(lod_adjusted,  mu, sd)</span>
<span id="cb5-25">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## draw random percentiles between lower and upper</span></span>
<span id="cb5-26">  rand_perc_interval <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(mu),  unif_lower, unif_upper) </span>
<span id="cb5-27">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## get value belonging to percentile</span></span>
<span id="cb5-28">  imputes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qnorm</span>(rand_perc_interval, mu, sd) </span>
<span id="cb5-29">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove technical variation from detected values</span></span>
<span id="cb5-30">  y_adjusted <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log_y_obs'</span>]] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> batch_effect</span>
<span id="cb5-31">  </span>
<span id="cb5-32">  imputed_sets[,i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'censored'</span>]], imputes, y_adjusted)</span>
<span id="cb5-33">}</span>
<span id="cb5-34"></span>
<span id="cb5-35">r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>(imputed_sets)</span></code></pre></div>
</div>
<p>Below we see that the model has indeed recovered the parameters of the data generating process. The imputations are based on these parameters.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> Family: gaussian 
  Links: mu = identity; sigma = identity 
Formula: log_y_obs | cens(left_cens) ~ 1 + x + (1 | batch_id/plate_nested_coding) 
   Data: dplyr::mutate(df, left_cens = censored * -1) (Number of observations: 2000) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup draws = 4000

Multilevel Hyperparameters:
~batch_id (Number of levels: 5) 
              Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(Intercept)     1.98      0.77     0.98     3.96 1.00     1647     1743

~batch_id:plate_nested_coding (Number of levels: 20) 
              Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(Intercept)     0.60      0.13     0.41     0.89 1.00     1333     2191

Regression Coefficients:
          Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
Intercept    11.49      0.86     9.80    13.26 1.00     1791     2050
x             0.07      0.02     0.02     0.11 1.00     5030     2630

Further Distributional Parameters:
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sigma     1.01      0.02     0.97     1.05 1.00     4824     2472

Draws were sampled using sample(hmc). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).</code></pre>
</div>
</div>
<p>Visually, we can plot one of the imputed sets, and we can see that it fits well with the ideal data distribution that has the technical variation removed and the nondetects imputed. We imputed multiple times to represent and capture the uncertainty around the exact value of the nondetects<sup>3</sup>. We can also see that some of the observed values are now under the the original limit of detection. This is because – according to our model – these observations would have been nondetects in a ‘usual’ batch. And vice versa, there are some nondetects that would have been observed in a ‘usual’ batch and are now above the original LOD.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">df_imputes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(df, r)</span>
<span id="cb8-2"></span>
<span id="cb8-3">p_a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_imputes <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(inj_order, V2)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unname</span>(bluebrown_colors_list)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> batch_id)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(df_imputes, censored), </span>
<span id="cb8-8">           <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> inj_order, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> V2), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_lab, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y_lab) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">batch_lod_hline</span>(df_imputes, nr_batches, samples_p_batch,</span>
<span id="cb8-11">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> linewidth, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dashed'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log_y), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log_y))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'none'</span>) </span>
<span id="cb8-15"></span>
<span id="cb8-16">p_b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_imputes <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb8-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> V2)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> nr_bins, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log_y), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log_y))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, axis_range_bins)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> log_lod), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dashed'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> linewidth <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_flip</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>()</span>
<span id="cb8-24"></span>
<span id="cb8-25">p_a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p_b <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_layout</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">widths =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://maxoosterwegel.com/posts/impute-and-remove-technical-variation-metabolomics/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>And if we plot the values from an imputed set vs the original values we see the increased uncertainty in values below the LOD:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">df_imputes <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-2">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(plate_nested_coding <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'4_4'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(V2, log_y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> censored)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_hline</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yintercept =</span> log_lod), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dashed'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-6">  see<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_okabeito</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">order =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Original value'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'An imputed set value'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://maxoosterwegel.com/posts/impute-and-remove-technical-variation-metabolomics/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="implications" class="level1">
<h1>Implications</h1>
<p>Unfortunately, I think this intertwined nature of nondetects and batch effects also means that your technical variation adjustment needs to be bespoke; you cannot do this imputation and ‘denoising’ once for your dataset and be done with it (if you care to this degree about bias). In theory, you could build the richest possible imputation model (and thus technical variation removal model) that is congenial with the most complex analysis that you would like to do and be done with it. In practice, this would be very hard with the amount of times a dataset is reanalysed by different analysts and the near certainty of missing values for the other variables in a rich imputation model. It will be even harder to create an congenial dataset when a mixture is the topic of interest and the dataset contains many left censored features, because you would need to impute in two variables simultaneously and there’s no (easy) way to fit a multivariate left censored model <sup>4</sup>.</p>
<p>One potential way around this intertwined nature may be using the pooled QC samples for the batch adjustment using some kind of LOESS fit across the injection order. However, (1) labs do not always deliver information on QCs (2) there are less QA samples than study samples and as such there’s less data to inform such a model (3) readily available LOESS models do not take left censoring into account. More importantly, it also doesn’t easily incorporate other covariates in the adjustment process which risks removing real biological variation and potentially failing to capture that for example cases are more often censored. Such a LOESS approach also still separates batch correction from the imputation of study samples, failing to address this interdependence between batch-specific LODs and the imputation process itself.</p>
</section>
<section id="possible-extensions" class="level1">
<h1>Possible extensions</h1>
<p>Sometimes there’s also drift within a plate or a batch. One possible way to model this is by adding a random slope for injection order within a batch or plate. The code from above readily supports this, because the code assumes all the random effects are nuisance variation. Although, I think that such more complicated models are much harder to fit so you may want to represent this drift in another way. Maybe using some fixed effects<sup>5</sup> and then remove this from the imputations and adjustment manually using some <code>model.matrix()</code> operation.</p>
<p>One final point that I want to make on these models, is on the assumption of a multiplicative error term – here made by the log transformation – in metabolomic data. It’s a useful model in the sense that it permits only positive values and it is in line with our idea of the data generation process. Namely, it is plausible that the true error structure arises from such a multiplicative process, because measured intensity/concentration can be thought of as a function of <em>duration of exposure</em> <img src="https://latex.codecogs.com/png.latex?%5Ctimes"> <em>number of times exposed</em>. However, in a lognormal distribution the error is also smaller for smaller values. And this is of course opposite of the limit of detection idea. If the error were indeed smaller for smaller values there would be no limit of detection! I hope the multiple versions of the imputed dataset at least overcome this partially. <span class="citation" data-cites="senn2012ghosts">Senn, Holford, and Hockey (2012)</span> mention that realistic likelihood models could consider a complex mixture of true concentration and error measurement models, or model the mean and variance structures separately. While I always like to think about the ideal model, I think for large scale metabolomics where you often have to fit this model to thousands of features this is not feasible.</p>
<!-- " the measured concentration can be thought of as a function of *duration of exposure* $\times$ *number of times exposed*. So differences in measured concentrations of the same compound (i.e. the variation) arise because of differences in one (or both) of the terms of this formula. And as we can see this formula is a *product* of factors, logarithms tend to work better when data arises from such a multiplicative process." -->



</section>


<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-senn2012ghosts" class="csl-entry">
Senn, Stephen, Nick Holford, and Hans Hockey. 2012. <span>“The Ghosts of Departed Quantities: Approaches to Dealing with Observations Below the Limit of Quantitation.”</span> <em>Statistics in Medicine</em> 31 (30): 4280–95. <a href="https://doi.org/10.1002/sim.5515">https://doi.org/10.1002/sim.5515</a>.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>If your research question pertains directly to the exposure or metabolite level itself – rather than its relationship as a predictor for an outcome – then imputation is not necessary of course, because you can directly use the fitted left censored model.↩︎</p></li>
<li id="fn2"><p>Fast, robust, frequentist left censored multilevel models are not really <a href="../..\posts/left-censored-models-showcase/">possible/available</a>.↩︎</p></li>
<li id="fn3"><p>In discussions I get the sense that many people think that the goal of imputation in metabolomics is to get as close as possible to the value that we would have observed with unlimited instrument sensitivity. While that’s welcome, it’s more important for valid downstream inference with censored data to accurately represent the uncertainty associated with those unobserved values.↩︎</p></li>
<li id="fn4"><p>I think some kind of Gibbs sampler or some chained equation is the best we can do.↩︎</p></li>
<li id="fn5"><p>I’m not entirely sure what’s better (in this setup): a model with random slopes that possibly doesn’t fully converge or some 20 fixed effect interaction terms (with potentially some sparsity inducing horseshoe or LASSO priors). I guess putting (very) strong priors on the random slopes is also a good option.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{j._oosterwegel2025,
  author = {J. Oosterwegel, Max},
  title = {Imputing and Removing Technical Variation in Left Censored
    Metabolomic Data},
  date = {2025-04-28},
  url = {https://maxoosterwegel.com/posts/impute-and-remove-technical-variation-metabolomics/},
  doi = {placeholder},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-j._oosterwegel2025" class="csl-entry quarto-appendix-citeas">
J. Oosterwegel, Max. 2025. <span>“Imputing and Removing Technical
Variation in Left Censored Metabolomic Data.”</span> April 28, 2025. <a href="https://doi.org/placeholder">https://doi.org/placeholder</a>.
</div></div></section></div> ]]></description>
  <guid>https://maxoosterwegel.com/posts/impute-and-remove-technical-variation-metabolomics/</guid>
  <pubDate>Sun, 27 Apr 2025 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Fitting left censored models using R</title>
  <dc:creator>Max J. Oosterwegel</dc:creator>
  <link>https://maxoosterwegel.com/posts/left-censored-models-showcase/</link>
  <description><![CDATA[ 




<p>In environmental epidemiology – and environmental studies more generally – we often aim to detect trace levels of pollutants, metabolites, or biomarkers. Be it in a biospecimen like blood and urine or in environmental media such as soil, water, and air. This can be done with <a href="https://en.wikipedia.org/wiki/Gas_chromatography%E2%80%93mass_spectrometry">liquid/gas chromatography mass spectrometry instruments</a> among others. Even though these instruments are very sensitive these days, they will sometimes hit their detection limits. This blog posts will go briefly go over on how to handle such data statistically speaking, and what options are available in <code>R</code> to fit these models.</p>
<section id="censoring" class="level1">
<h1>Censoring</h1>
<p>Every epidemiologist is familiar with the standard survival analysis example that describes right censored observations. In this example, some participants are lost to follow-up or do not experience the event during the study. As a result, for these participants we only know that a possible event occurred somewhere after our observation period. These observations are then said to be right censored at the end of this window.</p>
<p>With the aforementioned instruments, the situation is flipped: we only know a value is <em>less</em> than a certain value. In these cases, our instrument can’t discern the analyte from background noise below a certain point. In other words, measurements on such an instrument were limited to a minimum measurement of <img src="https://latex.codecogs.com/png.latex?l"> so any measurement smaller than <img src="https://latex.codecogs.com/png.latex?l"> was recorded as <img src="https://latex.codecogs.com/png.latex?l">. We refer to this minimum measurement as the limit of detection or limit of quantification and the data is said to be left censored at this limit<sup>1</sup>. Measurements smaller than this simply cannot be measured with this instrument.<sup>2</sup></p>
<p>Writing this in a more formal way, we can specify a latent regression model with an outcome that is either observed or unobserved:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ay_i%5E*=%20%5Cbegin%7Bcases%7Dy_i%20&amp;%20%5Ctext%20%7B%20if%20%7D%20y_i%3El%20%5C%5C%0Al%20&amp;%20%5Ctext%20%7B%20if%20%7D%20y_i%20%5Cleq%20l%20%5Cend%7Bcases%7D%0A"> where <img src="https://latex.codecogs.com/png.latex?y_i"> represents the ‘true’, latent values, <img src="https://latex.codecogs.com/png.latex?y_i%5E*"> are values we observe in reality, and <img src="https://latex.codecogs.com/png.latex?l"> is the limit of detection<sup>3</sup>.</p>
<p>In most environmental studies (and the classical tobit model from economics)<sup>4</sup> we then assume a normally distributed error term for the true values <img src="https://latex.codecogs.com/png.latex?y_i"> so we write</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ay_i%20%5Csim%20%5Cmathrm%7B~N%7D%5Cleft(a+b%20x_i,%20%5Csigma%5E2%5Cright),%20%5Ctext%20%7B%20for%20%7D%20i=1,%20%5Cldots,%20n%0A"> We can then estimate the parameters of the underlying distribution using the <em>observed</em> data <img src="https://latex.codecogs.com/png.latex?y_i%5E*"> by including a separate term for the censoring mechanism in the likelihood:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname%7BPr%7D%5Cleft(y_i%20%5Cleq%20l%5Cright)=%5Cint_%7B-%5Cinfty%7D%5E%7Bl%7D%20%5Cmathrm%7BN%7D%5Cleft(y_i%20%5Cmid%20a+b%20x_i,%20%5Csigma%5E2%5Cright)=%20%20%5CPhi%5Cleft(%5Cfrac%7Bl%20-%20(a+b%20x_i)%7D%7B%5Csigma%7D%5Cright)%0A"> such that the two terms of the likelihood become <img src="https://latex.codecogs.com/png.latex?%0Ay_i%5E*=%20%5Cbegin%7Bcases%7D%5Cmathrm%7BN%7D%5Cleft(y_i%20%5Cmid%20a+b%20x_i,%20%5Csigma%5E2%5Cright)%20&amp;%20%5Ctext%20%7B%20if%20%7D%20y_i%3El%20%5C%5C%0A%5CPhi%5Cleft(%5Cfrac%7Bl%20-%20(a+b%20x_i)%7D%7B%5Csigma%7D%5Cright)%20&amp;%20%5Ctext%20%7B%20if%20%7D%20y_i%20%5Cleq%20l%20%5Cend%7Bcases%7D%0A"> with the likelihood for the uncensored data points just being the normal probability density function.</p>
<p>Visually, the densities of <img src="https://latex.codecogs.com/png.latex?y"> and <img src="https://latex.codecogs.com/png.latex?y%5E*"> looks as follows:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100000</span></span>
<span id="cb1-2">prop_censored <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span></span>
<span id="cb1-3">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n)</span>
<span id="cb1-4">censor_point <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(y, prop_censored)</span>
<span id="cb1-5">censored <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> censor_point</span>
<span id="cb1-6">y_obs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(censored, censor_point, y)</span>
<span id="cb1-7">y_dens <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">density</span>(y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> n)</span>
<span id="cb1-8">y_obs_dens <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">density</span>(y_obs, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> n)</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-11">df_y_dens <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dens_x =</span> y_dens<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x,</span>
<span id="cb1-12">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dens_y =</span> y_dens<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y,</span>
<span id="cb1-13">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">censor_point =</span> censor_point,</span>
<span id="cb1-14">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"true"</span>)</span>
<span id="cb1-15"></span>
<span id="cb1-16">df_y_dens_obs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dens_x =</span> y_obs_dens<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x,</span>
<span id="cb1-17">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dens_y =</span> y_obs_dens<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y,</span>
<span id="cb1-18">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">censor_point =</span> censor_point,</span>
<span id="cb1-19">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>)</span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-22">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.line =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rel</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)),</span>
<span id="cb1-23">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.border =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()))</span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> dens_x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> dens_y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df_y_dens, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>,</span>
<span id="cb1-27">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"True values"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dotted"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(df_y_dens_obs, dens_x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> censor_point), </span>
<span id="cb1-29">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>,</span>
<span id="cb1-30">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Observed values"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> censor_point, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Censor point"</span>), </span>
<span id="cb1-32">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_area</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(df_y_dens, dens_x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> censor_point),</span>
<span id="cb1-34">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#822D2F"</span>,</span>
<span id="cb1-35">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Censored values"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>  </span>
<span id="cb1-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb1-38">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"True values"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, </span>
<span id="cb1-39">                                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Observed values"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#375A6D"</span>, </span>
<span id="cb1-40">                                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Censor point"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, </span>
<span id="cb1-41">                                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Censored values"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#822D2F"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),  </span>
<span id="cb1-44">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-45">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-46">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://maxoosterwegel.com/posts/left-censored-models-showcase/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>so informally speaking, by virtue of the data being censored and not truncated we know the height of the probability mass and when we combine this information with the information from the uncensored observations, and the assumption we made on its distributional form we can ‘spread out’ the probability mass across the censored region and estimate the parameters of the latent/true data structure.</p>
<p>If we additionally simulate an effect of <img src="https://latex.codecogs.com/png.latex?x"> on <img src="https://latex.codecogs.com/png.latex?y"> and plot <img src="https://latex.codecogs.com/png.latex?x"> vs <img src="https://latex.codecogs.com/png.latex?y"> we can easily see that ignoring the censoring mechanism (or substituting by a constant value below the limit of detection as is often done – not shown) biases the estimate of the slope.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span></span>
<span id="cb2-2">prop_censored <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span></span>
<span id="cb2-3">b_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb2-4">sd <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb2-5"></span>
<span id="cb2-6">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n)</span>
<span id="cb2-7">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n, x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b_1, sd)</span>
<span id="cb2-8">censor_point <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(y, prop_censored)</span>
<span id="cb2-9">censored <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> censor_point</span>
<span id="cb2-10">y_obs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(censored, censor_point, y)</span>
<span id="cb2-11"></span>
<span id="cb2-12">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(y, y_obs, x, censor_point)</span></code></pre></div>
</div>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y_obs), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#375A6D'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(df, y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> censor_point),</span>
<span id="cb3-5">             <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#822D2F'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y_obs, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Observed values fit"</span>), </span>
<span id="cb3-7">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"solid"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"True values fit"</span>), </span>
<span id="cb3-9">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lm'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dotted"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb3-11">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"True values fit"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dotted"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Observed values fit"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"solid"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb3-13">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"True values fit"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Observed values fit"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expression</span>(x),</span>
<span id="cb3-15">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expression</span>(y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://maxoosterwegel.com/posts/left-censored-models-showcase/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="fitting-a-left-censored-model-using-r" class="level1">
<h1>Fitting a left censored model using R</h1>
<p>We can fit a model in <code>R</code> that accounts for the censoring mechanism by writing down the likelihood and passing it to <code>optim</code> to find the maximum:<sup>5</sup></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">log_lik <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(parameter_vector, x, y, l) {</span>
<span id="cb4-2">  a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> parameter_vector[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb4-3">  b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> parameter_vector[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb4-4">  sigma <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> parameter_vector[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb4-5">  </span>
<span id="cb4-6">  linear_predictor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x</span>
<span id="cb4-7">  </span>
<span id="cb4-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># you could also do this more explicitly with an indicator variable and a multiplication </span></span>
<span id="cb4-9">  ll_vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> l, </span>
<span id="cb4-10">                   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(y, linear_predictor, sigma, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb4-11">                   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pnorm</span>((l <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> linear_predictor)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>sigma, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb4-12">  </span>
<span id="cb4-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(ll_vec))</span>
<span id="cb4-14">}</span>
<span id="cb4-15"></span>
<span id="cb4-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initialize with a fit from the observed data, inits &lt;- runif(3) will also work for simple models</span></span>
<span id="cb4-17">initmod <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df)</span>
<span id="cb4-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(initmod), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(initmod)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sigma))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>(Intercept)           x       sigma 
 0.09927942  0.06638911  0.38652839 </code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">init <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(initmod), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(initmod)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sigma))</span>
<span id="cb6-2"></span>
<span id="cb6-3">mle <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">optim</span>(init, log_lik, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Inf</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Inf</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>.e<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-5</span>),</span>
<span id="cb6-4">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L-BFGS-B"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fnscale =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), </span>
<span id="cb6-5">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y_obs'</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">l =</span> censor_point)</span>
<span id="cb6-6">mle<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>par</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> (Intercept)            x        sigma 
0.0005055924 0.0974616424 0.5137657833 </code></pre>
</div>
</div>
<p>We can see that the procedure managed to recover the true values for <img src="https://latex.codecogs.com/png.latex?%5Csigma"> (= 0.5) and <img src="https://latex.codecogs.com/png.latex?%5Cbeta_1"> (= 0.1).</p>
<p>Of course there are also <code>R</code> packages that can do such a procedure for us. Both frequentist and Bayesian. Below an overview:</p>
<section id="survival" class="level3">
<h3 class="anchored" data-anchor-id="survival">{survival}</h3>
<p>In {survival} you can specify left censored models just as you would specify right censored models using the <code>Surv</code> object. The <code>censor_point</code> can also be a vector and thereby allow your observations to be censored at different levels/limits.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> survival<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">survreg</span>(survival<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Surv</span>(y_obs,</span>
<span id="cb8-2">                                      y_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> censor_point,</span>
<span id="cb8-3">                                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x,</span>
<span id="cb8-4">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df,</span>
<span id="cb8-5">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dist =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gaussian"</span>)</span>
<span id="cb8-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
survival::survreg(formula = survival::Surv(y_obs, y_obs &gt; censor_point, 
    type = "left") ~ 1 + x, data = df, dist = "gaussian")
                Value Std. Error      z      p
(Intercept)  0.000506   0.012272   0.04   0.97
x            0.097462   0.011836   8.23 &lt;2e-16
Log(scale)  -0.665992   0.020230 -32.92 &lt;2e-16

Scale= 0.514 

Gaussian distribution
Loglik(model)= -1587.6   Loglik(intercept only)= -1621.4
    Chisq= 67.57 on 1 degrees of freedom, p= 2e-16 
Number of Newton-Raphson Iterations: 3 
n= 2000 </code></pre>
</div>
</div>
<p>You can get the same result by specifying the left censoring as a special case of interval censoring:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> survival<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">survreg</span>(survival<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Surv</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(y_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> censor_point, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">999</span>, y_obs), </span>
<span id="cb10-2">                                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time2 =</span> censor_point,</span>
<span id="cb10-3">                                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">event =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(y_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> censor_point, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), </span>
<span id="cb10-4">                                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"interval"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x, </span>
<span id="cb10-5">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df,</span>
<span id="cb10-6">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dist =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gaussian"</span>)</span>
<span id="cb10-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
survival::survreg(formula = survival::Surv(time = ifelse(y_obs == 
    censor_point, -999, y_obs), time2 = censor_point, event = ifelse(y_obs == 
    censor_point, 3, 1), type = "interval") ~ 1 + x, data = df, 
    dist = "gaussian")
                Value Std. Error      z      p
(Intercept)  0.000506   0.012272   0.04   0.97
x            0.097462   0.011836   8.23 &lt;2e-16
Log(scale)  -0.665992   0.020230 -32.92 &lt;2e-16

Scale= 0.514 

Gaussian distribution
Loglik(model)= -1587.6   Loglik(intercept only)= -1621.4
    Chisq= 67.57 on 1 degrees of freedom, p= 2e-16 
Number of Newton-Raphson Iterations: 6 
n= 2000 </code></pre>
</div>
</div>
<p>There’s also a lognormal distribution available in {survival}.</p>
</section>
<section id="censreg" class="level3">
<h3 class="anchored" data-anchor-id="censreg">{censReg}</h3>
<p>{censReg} does not support varying censoring points, as the <code>left</code> argument only allows a constant, whereas {survival} allows this by specifying a <code>censor_point</code> vector.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> censReg<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">censReg</span>(y_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x, </span>
<span id="cb12-2">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df, </span>
<span id="cb12-3">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BHHH"</span>, </span>
<span id="cb12-4">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">left =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y_obs), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">right =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Inf</span>)</span>
<span id="cb12-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
censReg::censReg(formula = y_obs ~ 1 + x, left = min(df$y_obs), 
    right = Inf, data = df, method = "BHHH")

Observations:
         Total  Left-censored     Uncensored Right-censored 
          2000            600           1400              0 

Coefficients:
              Estimate Std. error t value  Pr(&gt; t)    
(Intercept)  0.0005067  0.0122142   0.041    0.967    
x            0.0974645  0.0119876   8.130 4.28e-16 ***
logSigma    -0.6659855  0.0209399 -31.805  &lt; 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

BHHH maximisation, 17 iterations
Return code 8: successive function values within relative tolerance limit (reltol)
Log-likelihood: -1587.58 on 3 Df</code></pre>
</div>
</div>
</section>
<section id="multilevel-left-censored-models" class="level2">
<h2 class="anchored" data-anchor-id="multilevel-left-censored-models">Multilevel left censored models</h2>
<p>Sometimes your data is more complicated and you want to specify different levels of your data. For example: a random intercept that specifies what subject or batch an observation belongs to. Your <code>R</code> package options are more limited then, as the frequentist approach now needs to additionally integrate over the random effects in the definition of the marginal likelihood.</p>
<p>The {survival} model does not support such models while {censReg} supports only a simple two-level random intercept model:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">samples_p_batch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb14-2">nr_batches <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> n<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>samples_p_batch</span>
<span id="cb14-3">sd_batch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb14-4"></span>
<span id="cb14-5">re_batch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(nr_batches, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sd_batch), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> samples_p_batch)</span>
<span id="cb14-6">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n, x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> re_batch, sd)</span>
<span id="cb14-7"></span>
<span id="cb14-8">censor_point <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(y, prop_censored)</span>
<span id="cb14-9">censored <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> censor_point</span>
<span id="cb14-10">y_obs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(censored, censor_point, y)</span>
<span id="cb14-11"></span>
<span id="cb14-12">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(y, y_obs, x, censor_point, </span>
<span id="cb14-13">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">index =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>samples_p_batch, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> nr_batches),</span>
<span id="cb14-14">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">batch_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nr_batches, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> samples_p_batch))</span></code></pre></div>
</div>
<section id="censreg-1" class="level3">
<h3 class="anchored" data-anchor-id="censreg-1">{censReg}</h3>
<p>To get such a two-level random intercept model to work in {censReg} we have to create a {plm} object first<sup>6</sup></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">pData <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> plm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pdata.frame</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>( <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"batch_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"index"</span>))</span>
<span id="cb15-2"></span>
<span id="cb15-3">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> censReg<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">censReg</span>(y_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x, </span>
<span id="cb15-4">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> pData, </span>
<span id="cb15-5">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BHHH"</span>, </span>
<span id="cb15-6">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">left =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y_obs), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">right =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Inf</span>)</span>
<span id="cb15-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
censReg::censReg(formula = y_obs ~ 1 + x, left = min(df$y_obs), 
    right = Inf, data = pData, method = "BHHH")

Observations:
         Total  Left-censored     Uncensored Right-censored 
          2000            600           1400              0 

Coefficients:
             Estimate Std. error t value  Pr(&gt; t)    
(Intercept) -0.091705   0.004090 -22.423  &lt; 2e-16 ***
x            0.083038   0.016855   4.927 8.37e-07 ***
logSigmaMu   0.454964   0.002405 189.172  &lt; 2e-16 ***
logSigmaNu  -0.474995   0.007687 -61.794  &lt; 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

BHHH maximisation, 150 iterations
Return code 4: Iteration limit exceeded (iterlim)
Log-likelihood: -1475.026 on 4 Df</code></pre>
</div>
</div>
</section>
<section id="glmmadaptive" class="level3">
<h3 class="anchored" data-anchor-id="glmmadaptive">{GLMMadaptive}</h3>
<p>One other frequentist package available for your left censored models is {GLMMadaptive}. In addition to your observed outcome, you need to specify a vector with an indicator variable that describes whether the observation was censored:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> GLMMadaptive<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mixed_model</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(y_obs, censored) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x, </span>
<span id="cb17-2">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">random =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>batch_id, </span>
<span id="cb17-3">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df,</span>
<span id="cb17-4">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> GLMMadaptive<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">censored.normal</span>())</span>
<span id="cb17-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
GLMMadaptive::mixed_model(fixed = cbind(y_obs, censored) ~ 1 + 
    x, random = ~1 | batch_id, data = df, family = GLMMadaptive::censored.normal())

Data Descriptives:
Number of Observations: 2000
Number of Groups: 20 

Model:
 family: censored normal
 link: identity 

Fit statistics:
   log.Lik      AIC      BIC
 -1196.614 2401.229 2405.212

Random effects covariance matrix:
             StdDev
(Intercept) 1.89308

Fixed effects:
            Estimate Std.Err z-value p-value
(Intercept)  -0.2812  0.4201 -0.6694 0.50326
x             0.0742  0.0126  5.8995 &lt; 1e-04

log(residual std. dev.):
  Estimate Std.Err
   -0.6983  0.0192

Integration:
method: adaptive Gauss-Hermite quadrature rule
quadrature points: 11

Optimization:
method: hybrid EM and quasi-Newton
converged: TRUE </code></pre>
</div>
</div>
<p>We can also use random slopes in GLMMadaptive. But only a single grouping factor (i.e., no nested (i.e.&nbsp;2+ levels) or crossed random effects designs) is <a href="https://cran.r-project.org/web/packages/GLMMadaptive/vignettes/GLMMadaptive.html">supported</a> at the moment. {GLMMadaptive} is relatively fast. Unfortunately, when I had to fit more than 20 of these models for projects at least one of those models had convergence issues/errors. But perhaps someone with more feel for optimizer parameters is more successful.</p>
<p>And contrary to {censReg} you can extract the random effects:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">GLMMadaptive<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ranef</span>(m) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  (Intercept)
1   0.3581646
2   1.2568000
3   0.7057757
4  -2.1809270
5  -0.6329443
6   3.2980978</code></pre>
</div>
</div>
</section>
<section id="brms-stan" class="level3">
<h3 class="anchored" data-anchor-id="brms-stan">{brms} / {STAN}</h3>
<p>For Bayesian software implementations the addition of random intercepts and slopes is less challenging, because it avoids the cumbersome integration. Similarly to {GLMMadaptive} we specify an additional indicator variable for our {brms} model, but this time left censoring is indicated by <img src="https://latex.codecogs.com/png.latex?-1"> (uncensored is <img src="https://latex.codecogs.com/png.latex?0"> in <code>brms</code> and <img src="https://latex.codecogs.com/png.latex?1"> indicates right censoring):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> brms<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(y_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cens</span>(censored) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>batch_id), </span>
<span id="cb21-2">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">censored =</span> censored <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), </span>
<span id="cb21-3">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2025</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb21-4">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">backend =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cmdstanr"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cores =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 1 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 2 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 3 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 4 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 2 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 2 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 3 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 3 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 4 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 4 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 2 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 2 finished in 27.7 seconds.
Chain 1 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 1 finished in 28.6 seconds.
Chain 4 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 4 finished in 30.8 seconds.
Chain 3 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 3 finished in 31.8 seconds.

All 4 chains finished successfully.
Mean chain execution time: 29.7 seconds.
Total execution time: 32.0 seconds.</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> Family: gaussian 
  Links: mu = identity; sigma = identity 
Formula: y_obs | cens(censored) ~ 1 + x + (1 | batch_id) 
   Data: dplyr::mutate(df, censored = censored * -1) (Number of observations: 2000) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup draws = 4000

Multilevel Hyperparameters:
~batch_id (Number of levels: 20) 
              Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(Intercept)     2.02      0.33     1.48     2.78 1.01      513      776

Regression Coefficients:
          Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
Intercept    -0.27      0.43    -1.19     0.54 1.01      408      511
x             0.07      0.01     0.05     0.10 1.00     1719     2001

Further Distributional Parameters:
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sigma     0.50      0.01     0.48     0.52 1.00     1585     1527

Draws were sampled using sample(hmc). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).</code></pre>
</div>
</div>
<p>If we print the actual STAN code we see familiar elements from our earlier likelihood:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1">brms<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stancode</span>(m)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>// generated with brms 2.22.0
functions {
}
data {
  int&lt;lower=1&gt; N;  // total number of observations
  vector[N] Y;  // response variable
  // censoring indicator: 0 = event, 1 = right, -1 = left, 2 = interval censored
  array[N] int&lt;lower=-1,upper=2&gt; cens;
  int&lt;lower=1&gt; K;  // number of population-level effects
  matrix[N, K] X;  // population-level design matrix
  int&lt;lower=1&gt; Kc;  // number of population-level effects after centering
  // data for group-level effects of ID 1
  int&lt;lower=1&gt; N_1;  // number of grouping levels
  int&lt;lower=1&gt; M_1;  // number of coefficients per level
  array[N] int&lt;lower=1&gt; J_1;  // grouping indicator per observation
  // group-level predictor values
  vector[N] Z_1_1;
  int prior_only;  // should the likelihood be ignored?
}
transformed data {
  // indices of censored data
  int Nevent = 0;
  int Nrcens = 0;
  int Nlcens = 0;
  array[N] int Jevent;
  array[N] int Jrcens;
  array[N] int Jlcens;
  matrix[N, Kc] Xc;  // centered version of X without an intercept
  vector[Kc] means_X;  // column means of X before centering
  // collect indices of censored data
  for (n in 1:N) {
    if (cens[n] == 0) {
      Nevent += 1;
      Jevent[Nevent] = n;
    } else if (cens[n] == 1) {
      Nrcens += 1;
      Jrcens[Nrcens] = n;
    } else if (cens[n] == -1) {
      Nlcens += 1;
      Jlcens[Nlcens] = n;
    }
  }
  for (i in 2:K) {
    means_X[i - 1] = mean(X[, i]);
    Xc[, i - 1] = X[, i] - means_X[i - 1];
  }
}
parameters {
  vector[Kc] b;  // regression coefficients
  real Intercept;  // temporary intercept for centered predictors
  real&lt;lower=0&gt; sigma;  // dispersion parameter
  vector&lt;lower=0&gt;[M_1] sd_1;  // group-level standard deviations
  array[M_1] vector[N_1] z_1;  // standardized group-level effects
}
transformed parameters {
  vector[N_1] r_1_1;  // actual group-level effects
  real lprior = 0;  // prior contributions to the log posterior
  r_1_1 = (sd_1[1] * (z_1[1]));
  lprior += student_t_lpdf(Intercept | 3, 0.1, 2.5);
  lprior += student_t_lpdf(sigma | 3, 0, 2.5)
    - 1 * student_t_lccdf(0 | 3, 0, 2.5);
  lprior += student_t_lpdf(sd_1 | 3, 0, 2.5)
    - 1 * student_t_lccdf(0 | 3, 0, 2.5);
}
model {
  // likelihood including constants
  if (!prior_only) {
    // initialize linear predictor term
    vector[N] mu = rep_vector(0.0, N);
    mu += Intercept + Xc * b;
    for (n in 1:N) {
      // add more terms to the linear predictor
      mu[n] += r_1_1[J_1[n]] * Z_1_1[n];
    }
    // vectorized log-likelihood contributions of censored data
    target += normal_lpdf(Y[Jevent[1:Nevent]] | mu[Jevent[1:Nevent]], sigma);
    target += normal_lccdf(Y[Jrcens[1:Nrcens]] | mu[Jrcens[1:Nrcens]], sigma);
    target += normal_lcdf(Y[Jlcens[1:Nlcens]] | mu[Jlcens[1:Nlcens]], sigma);
  }
  // priors including constants
  target += lprior;
  target += std_normal_lpdf(z_1[1]);
}
generated quantities {
  // actual population-level intercept
  real b_Intercept = Intercept - dot_product(means_X, b);
}</code></pre>
</div>
</div>
<p>With {brms} the possibilities are almost endless<sup>7</sup> and fortunately its speed has also improved the last few years. My censored models usually converge out of the box, even with multiple random intercept terms. And with some reasonably strong priors I’ve also had success with high proportions of censored data (say &gt;80%).</p>
</section>
<section id="mcmcglmm" class="level3">
<h3 class="anchored" data-anchor-id="mcmcglmm">{MCMCglmm}</h3>
<p>{MCMCglmm} also supports left censored multilevel (&gt;two-level?) models. The random effect notation is a bit <a href="https://stat.ethz.ch/pipermail/r-sig-mixed-models/2013q1/019896.html">different</a> though. The intercept is varying by subject here (random intercept), <code>random = ~us(1+fixed_effect):cluster</code> gives a random intercept/slope model with estimated covariance, and <code>random = ~idh(1+fixed_effect):cluster</code> is the same but with the covariance set to 0. We can specify a left censored outcome by creating two variables. If left censored, <code>y_obs_min</code> is <code>-Inf</code> and <code>y_obs_max</code> takes on the value of the censoring point, in the other, non censored cases <code>y_obs_min</code> and <code>y_obs_max</code> are identical and take on the observed value:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(MCMCglmm)</span>
<span id="cb27-2"></span>
<span id="cb27-3">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> MCMCglmm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MCMCglmm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(y_obs_min, y_obs_max) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x , </span>
<span id="cb27-4">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">random =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> batch_id, </span>
<span id="cb27-5">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cengaussian"</span>, </span>
<span id="cb27-6">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb27-7">                          dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_obs_min =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(censored <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Inf</span>, y_obs),</span>
<span id="cb27-8">                                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_obs_max =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(censored <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, censor_point, y_obs)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb27-9">                          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(),</span>
<span id="cb27-10">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nitt =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">thin =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">burnin =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>,</span>
<span id="cb27-11">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
 Iterations = 10001:20000
 Thinning interval  = 1
 Sample size  = 10000 

 DIC: 2077.777 

 G-structure:  ~batch_id

         post.mean l-95% CI u-95% CI eff.samp
batch_id     4.123    1.728    7.005     3863

 R-structure:  ~units

      post.mean l-95% CI u-95% CI eff.samp
units    0.2479   0.2298   0.2675     2027

 Location effects: cbind(y_obs_min, y_obs_max) ~ 1 + x 

            post.mean l-95% CI u-95% CI eff.samp  pMCMC    
(Intercept)  -0.27949 -1.11097  0.68806     9673  0.518    
x             0.07432  0.04962  0.09862     4620 &lt;1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1</code></pre>
</div>
</div>
<p>The G structure <a href="https://stats.stackexchange.com/questions/32994/what-are-r-structure-g-structure-in-a-glmm">refers</a> to the random effect structure, while the R structure is the residual structure.</p>
<p>I think by default you do not get easy interpretable scale parameters, but you can <a href="https://stat.ethz.ch/pipermail/r-sig-mixed-models/2013q2/020390.html">obtain</a> an estimate by taking the square root of the posterior distribution of the (co)variance matrices:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(m<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>VCV))[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>              Mean          SD     Naive SE Time-series SE
batch_id 2.0001114 0.350291352 3.502914e-03   0.0057400762
units    0.4978472 0.009719887 9.719887e-05   0.0002157377</code></pre>
</div>
</div>
</section>
<section id="inla" class="level3">
<h3 class="anchored" data-anchor-id="inla">{INLA}</h3>
<p>Lastly I want to mention the {INLA} package. It seems like it’s neither purely frequentist nor fully Bayesian but instead <em>approximates</em> the posterior marginals. It’s mostly used in spatial statistics so perhaps this makes it the ideal candidate for censored concentration measurements with a spatial element, say a measurement campaign. Its interface is slightly unusual for the <code>R</code> regression packages I’m familiar with, but it is very, very fast! Many censored likelihood families are supported, but unfortunately the Gaussian family is not one of them:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(INLA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inla.models</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>likelihood) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb32-2">    purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">keep</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>stringr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(.x, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"surv"</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "gammasurv"        "gammajwsurv"      "qloglogisticsurv" "lognormalsurv"   
[5] "exponentialsurv"  "weibullsurv"      "loglogisticsurv"  "fmrisurv"        
[9] "gompertzsurv"    </code></pre>
</div>
</div>
<p>A censored gamma and lognormal family<sup>8</sup> are present though and these are also useful in environmental studies.</p>
<p>You specify censoring using a <code>inla.surv</code> where left censoring is coded as <img src="https://latex.codecogs.com/png.latex?2"> and uncensored observations get a <img src="https://latex.codecogs.com/png.latex?1"> indicator:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(INLA)</span>
<span id="cb34-2"></span>
<span id="cb34-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># simulate lognormal data</span></span>
<span id="cb34-4">samples_p_batch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb34-5">nr_batches <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> n<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>samples_p_batch</span>
<span id="cb34-6">sd_batch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb34-7"></span>
<span id="cb34-8">re_batch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(nr_batches, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sd_batch), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> samples_p_batch)</span>
<span id="cb34-9">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rlnorm</span>(n, x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> re_batch, sd)</span>
<span id="cb34-10"></span>
<span id="cb34-11">censor_point <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(y, prop_censored)</span>
<span id="cb34-12">censored <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> censor_point</span>
<span id="cb34-13">y_obs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(censored, censor_point, y)</span>
<span id="cb34-14"></span>
<span id="cb34-15">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(y, y_obs, x, censor_point, </span>
<span id="cb34-16">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">index =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>samples_p_batch, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> nr_batches),</span>
<span id="cb34-17">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">batch_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nr_batches, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> samples_p_batch)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb34-18">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">censored =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(censored <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb34-19"></span>
<span id="cb34-20">surv_obj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inla.surv</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y_obs, df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>censored)</span>
<span id="cb34-21">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inla</span>(surv_obj <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">f</span>(batch_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"iid"</span>), </span>
<span id="cb34-22">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df, </span>
<span id="cb34-23">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lognormal.surv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control.compute =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">config =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb35-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
   c("inla.core(formula = formula, family = family, contrasts = contrasts, 
   ", " data = data, quantiles = quantiles, E = E, offset = offset, ", " 
   scale = scale, weights = weights, Ntrials = Ntrials, strata = strata, 
   ", " lp.scale = lp.scale, link.covariates = link.covariates, verbose = 
   verbose, ", " lincomb = lincomb, selection = selection, control.compute 
   = control.compute, ", " control.predictor = control.predictor, 
   control.family = control.family, ", " control.inla = control.inla, 
   control.fixed = control.fixed, ", " control.mode = control.mode, 
   control.expert = control.expert, ", " control.hazard = control.hazard, 
   control.lincomb = control.lincomb, ", " control.update = 
   control.update, control.lp.scale = control.lp.scale, ", " 
   control.pardiso = control.pardiso, only.hyperparam = only.hyperparam, 
   ", " inla.call = inla.call, inla.arg = inla.arg, num.threads = 
   num.threads, ", " keep = keep, working.directory = working.directory, 
   silent = silent, ", " inla.mode = inla.mode, safe = FALSE, debug = 
   debug, .parent.frame = .parent.frame)" ) 
Time used:
    Pre = 0.419, Running = 0.403, Post = 0.111, Total = 0.933 
Fixed effects:
             mean    sd 0.025quant 0.5quant 0.975quant  mode kld
(Intercept) 0.374 0.493     -0.613    0.379      1.335 0.378   0
x           0.098 0.013      0.073    0.098      0.123 0.098   0

Random effects:
  Name    Model
    batch_id IID model

Model hyperparameters:
                                              mean    sd 0.025quant 0.5quant
Precision for the lognormalsurv observations 3.985 0.153      3.679    3.987
Precision for batch_id                       0.224 0.074      0.105    0.215
                                             0.975quant  mode
Precision for the lognormalsurv observations      4.280 4.001
Precision for batch_id                            0.392 0.198

Marginal log-Likelihood:  -3353.37 
 is computed 
Posterior summaries for the linear predictor and the fitted values are computed
(Posterior marginals needs also 'control.compute=list(return.marginals.predictor=TRUE)')</code></pre>
</div>
</div>
<p>The random effects estimates are expressed on the precision scale but you can do the following to obtain the variance of the random effects on a familiar scale:<sup>9</sup></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1">v1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> m <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pluck</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"internal.marginals.hyperpar"</span>, </span>
<span id="cb37-2">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Log precision for batch_id"</span>)</span>
<span id="cb37-3">v2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> m <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pluck</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"internal.marginals.hyperpar"</span>, </span>
<span id="cb37-4">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Log precision for the lognormalsurv observations"</span>)</span>
<span id="cb37-5"></span>
<span id="cb37-6">v1p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inla.tmarginal</span>(<span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(x), v1) </span>
<span id="cb37-7">v2p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inla.tmarginal</span>(<span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(x), v2)</span>
<span id="cb37-8"></span>
<span id="cb37-9">r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(</span>
<span id="cb37-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inla.zmarginal</span>(v1p) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"batch_id"</span>),</span>
<span id="cb37-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inla.zmarginal</span>(v2p) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"residual"</span>))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1"> r <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb38-2">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(mean))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 8
   mean      sd quant0.025 quant0.25 quant0.5 quant0.75 quant0.975 variable
  &lt;dbl&gt;   &lt;dbl&gt;      &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;   
1 2.23  1.77         2.56      3.73     4.63      5.87       9.41  batch_id
2 0.501 0.00965      0.234     0.245    0.251     0.258      0.272 residual</code></pre>
</div>
</div>
<p>You can also access the posterior through <code>INLA::inla.posterior.sample</code>.</p>
<p>Compared to {brms}, {INLA} needs much stronger priors on random intercepts in a censored (lognormal) model in my experience. I have yet to encounter a real-life scenario where it could reliably do with a noninformative prior. Perhaps this is simply a consequence of the lognormal family or the combination of the lognormal family and some parameter space definition difference I’m not aware of, but I often have had to specify priors like these</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb40-1">halfcauchy  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"expression:</span></span>
<span id="cb40-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma = exp(-theta/2);</span></span>
<span id="cb40-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  gamma = 0.1;</span></span>
<span id="cb40-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  log_dens = log(2) - log(pi) - log(gamma);</span></span>
<span id="cb40-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  log_dens = log_dens - log(1 + (sigma / gamma)^2);</span></span>
<span id="cb40-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  log_dens = log_dens - log(2) - theta / 2;</span></span>
<span id="cb40-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  return(log_dens);</span></span>
<span id="cb40-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb40-9">hcpriorlist <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prec =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prior =</span> halfcauchy))</span>
<span id="cb40-10"></span>
<span id="cb40-11">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inla</span>(surv_obj <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">f</span>(batch_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"iid"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hyper =</span> hcpriorlist), </span>
<span id="cb40-12">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lognormal.surv"</span>, </span>
<span id="cb40-13">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control.compute =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">config =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span></code></pre></div>
</div>
<p>for good frequentist coverage properties – with less strong priors there would be huge outliers where some simulations had an estimated mean a couple magnitudes higher.</p>
</section>
</section>
<section id="other-packages" class="level2">
<h2 class="anchored" data-anchor-id="other-packages">Other packages</h2>
<p>There are <a href="https://cran.r-project.org/web/views/MixedModels.html">other packages available</a> to fit these kinds of models that I have not covered here: {nlmixr2}, {ARpLMEC}, {lme4cens}, {gamlss} (supposedly also multilevel?), and {lmec} but they are either minimally used and validated<sup>10</sup>, or were somewhat clunky to use for me. There’s also talks to support censored regression models in <a href="https://github.com/glmmTMB/glmmTMB/issues/690">{glmmTMB}</a>. And there’s the {AER} package, but it seems like that is just a <a href="https://m-clark.github.io/models-by-example/tobit.html">wrapper</a> for the {survival} library with less functionality (i.e.&nbsp;no varying censoring points).</p>



</section>
</section>


<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-gelman2006data" class="csl-entry">
Gelman, A., and J. Hill. 2006. <em>Data Analysis Using Regression and Multilevel/Hierarchical Models</em>. Analytical Methods for Social Research. Cambridge University Press. <a href="https://sites.stat.columbia.edu/gelman/arm/">https://sites.stat.columbia.edu/gelman/arm/</a>.
</div>
<div id="ref-gelman2013bayesian" class="csl-entry">
Gelman, Andrew, John B. Carlin, Hal S. Stern, David B. Dunson, Akti Vehtari, and Donald B. Rubin. 2013. <em>Bayesian Data Analysis</em>. Third. Chapman &amp; Hall/CRC Texts in Statistical Science Series. CRC. <a href="https://stat.columbia.edu/~gelman/book/">https://stat.columbia.edu/~gelman/book/</a>.
</div>
<div id="ref-gelman2021regression" class="csl-entry">
Gelman, Andrew, Jennifer Hill, and Aki Vehtari. 2021. <em>Regression and Other Stories</em>. Cambridge University Press. <a href="https://avehtari.github.io/ROS-Examples/">https://avehtari.github.io/ROS-Examples/</a>.
</div>
<div id="ref-helsel2005nondetects" class="csl-entry">
Helsel, D. R. 2005. <em>Nondetects and Data Analysis: Statistics for Censored Environmental Data</em>. Statistics in Practice. Wiley. <a href="https://books.google.nl/books?id=krwQAQAAIAAJ">https://books.google.nl/books?id=krwQAQAAIAAJ</a>.
</div>
<div id="ref-helsel_fabricating_2006" class="csl-entry">
Helsel, Dennis R. 2006. <span>“Fabricating Data: How Substituting Values for Nondetects Can Ruin Results, and What Can Be Done about It.”</span> <em>Chemosphere</em>, Environmental <span>Chemistry</span>, 65 (11): 2434–39. <a href="https://doi.org/10.1016/j.chemosphere.2006.04.051">https://doi.org/10.1016/j.chemosphere.2006.04.051</a>.
</div>
<div id="ref-senn2012ghosts" class="csl-entry">
Senn, Stephen, Nick Holford, and Hans Hockey. 2012. <span>“The Ghosts of Departed Quantities: Approaches to Dealing with Observations Below the Limit of Quantitation.”</span> <em>Statistics in Medicine</em> 31 (30): 4280–95. <a href="https://doi.org/10.1002/sim.5515">https://doi.org/10.1002/sim.5515</a>.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Not to be confused with left truncation. In both truncation and censoring no information on the value of the observation beyond the truncation/censoring point is available. However, with censoring we know the number of observations beyond this point contrary to truncation where we do not observe any of the dependent variable or covariates – the entry is simply missing from your data table. See for example <span class="citation" data-cites="senn2012ghosts">Senn, Holford, and Hockey (2012)</span> and <span class="citation" data-cites="gelman2013bayesian">Andrew Gelman et al. (2013)</span>, p.224 for a more in depth explanation on the statistical connections between truncation and censoring.↩︎</p></li>
<li id="fn2"><p>While I have not encountered it myself, I have read that (some) mass spectrometry instruments can also reach saturation. This will not be the topic of this post. I think though that saturation would introduce an additional right censoring mechanism or some type of non-linear effect – again not sure how this gets handled in practice.↩︎</p></li>
<li id="fn3"><p>In this post we assume the limit of detection is known, but this need not always be the case. See for example <span class="citation" data-cites="gelman2013bayesian">Andrew Gelman et al. (2013)</span>, p.226 on how to handle this.↩︎</p></li>
<li id="fn4"><p>The classical tobit model from economics <a href="https://rdrr.io/cran/AER/man/tobit.html">assumes a normal distribution for outcome variable with left censoring at 0</a>.↩︎</p></li>
<li id="fn5"><p>Via <span class="citation" data-cites="gelman2006data">A. Gelman and Hill (2006)</span> and <a href="https://m-clark.github.io/models-by-example/tobit.html">Michael Clark</a> his post.↩︎</p></li>
<li id="fn6"><p>Though there seem to be some questions on if {censReg} is doing it <a href="https://stat.ethz.ch/pipermail/r-sig-mixed-models/2021q3/029715.html">correctly</a> (per the author of the {GLMMadaptive} package).↩︎</p></li>
<li id="fn7"><p>Unfortunately <a href="https://github.com/paul-buerkner/brms/issues/565">no censored predictors yet</a>.↩︎</p></li>
<li id="fn8"><p>Not entirely sure if the random effects also follow a lognormal distribution here. My simulations (not shown) suggest a lognormal normal distribution so this would be different from log transforming the outcome and using our {brms} model.↩︎</p></li>
<li id="fn9"><p>See for example [https://becarioprecario.bitbucket.io/inla-gitbook/ch-survival.html] and [https://www.paulamoraga.com/book-geospatial/sec-inla.html] for more details on how to work with {INLA}.↩︎</p></li>
<li id="fn10"><p>We are probably overconfident in statistical software and do not evaluate them sufficiently before using them in our work. See <a href="https://www.alexpghayes.com/post/2019-06-07_testing-statistical-software/">this post from Alex Hayes</a> for some thoughts on checking statistical software.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{j._oosterwegel2025,
  author = {J. Oosterwegel, Max},
  title = {Fitting Left Censored Models Using {R}},
  date = {2025-04-21},
  url = {https://maxoosterwegel.com/posts/left-censored-models-showcase/},
  doi = {placeholder},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-j._oosterwegel2025" class="csl-entry quarto-appendix-citeas">
J. Oosterwegel, Max. 2025. <span>“Fitting Left Censored Models Using
R.”</span> April 21, 2025. <a href="https://doi.org/placeholder">https://doi.org/placeholder</a>.
</div></div></section></div> ]]></description>
  <guid>https://maxoosterwegel.com/posts/left-censored-models-showcase/</guid>
  <pubDate>Sun, 20 Apr 2025 22:00:00 GMT</pubDate>
</item>
</channel>
</rss>
