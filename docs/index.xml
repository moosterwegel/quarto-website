<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Max Oosterwegel -- blog ( ._.)</title>
<link>https://maxoosterwegel.com/</link>
<atom:link href="https://maxoosterwegel.com/index.xml" rel="self" type="application/rss+xml"/>
<description>Blog Max Oosterwegel ( ._.)</description>
<generator>quarto-1.7.27</generator>
<lastBuildDate>Sun, 20 Apr 2025 22:00:00 GMT</lastBuildDate>
<item>
  <title>Fitting left censored models using R</title>
  <dc:creator>Max J. Oosterwegel</dc:creator>
  <link>https://maxoosterwegel.com/posts/left-censored-models-showcase/</link>
  <description><![CDATA[ 




<p>In environmental epidemiology – and environmental studies more generally – we often aim to detect trace levels of pollutants, metabolites, or biomarkers. Be it in a biospecimen like blood and urine or in environmental media such as soil, water, and air. This can be done with <a href="https://en.wikipedia.org/wiki/Gas_chromatography%E2%80%93mass_spectrometry">liquid/gas chromatography mass spectrometry instruments</a> among others. Even though these instruments are very sensitive these days, they will sometimes hit their detection limits. This blog posts will go briefly go over on how to handle such data statistically speaking, and what options are available in <code>R</code> to fit these models.</p>
<section id="censoring" class="level1">
<h1>Censoring</h1>
<p>Every epidemiologist is familiar with the standard survival analysis example that describes right censored observations. In this example, some participants are lost to follow-up or do not experience the event during the study. As a result, for these participants we only know that a possible event occurred somewhere after our observation period. These observations are then said to be right censored at the end of this window.</p>
<p>With the aforementioned instruments, the situation is flipped: we only know a value is <em>less</em> than a certain value. In these cases, our instrument can’t discern the analyte from background noise below a certain point. In other words, measurements on such an instrument were limited to a minimum measurement of <img src="https://latex.codecogs.com/png.latex?l"> so any measurement smaller than <img src="https://latex.codecogs.com/png.latex?l"> was recorded as <img src="https://latex.codecogs.com/png.latex?l">. We refer to this minimum measurement as the limit of detection or limit of quantification and the data is said to be left censored at this limit<sup>1</sup>. Measurements smaller than this simply cannot be measured with this instrument.<sup>2</sup></p>
<p>Writing this in a more formal way, we can specify a latent regression model with an outcome that is either observed or unobserved:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ay_i%5E*=%20%5Cbegin%7Bcases%7Dy_i%20&amp;%20%5Ctext%20%7B%20if%20%7D%20y_i%3El%20%5C%5C%0Al%20&amp;%20%5Ctext%20%7B%20if%20%7D%20y_i%20%5Cleq%20l%20%5Cend%7Bcases%7D%0A"> where <img src="https://latex.codecogs.com/png.latex?y_i"> represents the ‘true’, latent values, <img src="https://latex.codecogs.com/png.latex?y_i%5E*"> are values we observe in reality, and <img src="https://latex.codecogs.com/png.latex?l"> is the limit of detection<sup>3</sup>.</p>
<p>In most environmental studies (and the classical tobit model from economics)<sup>4</sup> we then assume a normally distributed error term for the true values <img src="https://latex.codecogs.com/png.latex?y_i"> so we write</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ay_i%20%5Csim%20%5Cmathrm%7B~N%7D%5Cleft(a+b%20x_i,%20%5Csigma%5E2%5Cright),%20%5Ctext%20%7B%20for%20%7D%20i=1,%20%5Cldots,%20n%0A"> We can then estimate the parameters of the underlying distribution using the <em>observed</em> data <img src="https://latex.codecogs.com/png.latex?y_i%5E*"> by including a separate term for the censoring mechanism in the likelihood:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname%7BPr%7D%5Cleft(y_i%20%5Cleq%20l%5Cright)=%5Cint_%7B-%5Cinfty%7D%5E%7Bl%7D%20%5Cmathrm%7BN%7D%5Cleft(y_i%20%5Cmid%20a+b%20x_i,%20%5Csigma%5E2%5Cright)=%20%20%5CPhi%5Cleft(%5Cfrac%7Bl%20-%20(a+b%20x_i)%7D%7B%5Csigma%7D%5Cright)%0A"> such that the two terms of the likelihood become <img src="https://latex.codecogs.com/png.latex?%0Ay_i%5E*=%20%5Cbegin%7Bcases%7D%5Cmathrm%7BN%7D%5Cleft(y_i%20%5Cmid%20a+b%20x_i,%20%5Csigma%5E2%5Cright)%20&amp;%20%5Ctext%20%7B%20if%20%7D%20y_i%3El%20%5C%5C%0A%5CPhi%5Cleft(%5Cfrac%7Bl%20-%20(a+b%20x_i)%7D%7B%5Csigma%7D%5Cright)%20&amp;%20%5Ctext%20%7B%20if%20%7D%20y_i%20%5Cleq%20l%20%5Cend%7Bcases%7D%0A"> with the likelihood for the uncensored data points just being the normal probability density function.</p>
<p>Visually, the densities of <img src="https://latex.codecogs.com/png.latex?y"> and <img src="https://latex.codecogs.com/png.latex?y%5E*"> looks as follows:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100000</span></span>
<span id="cb1-2">prop_censored <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span></span>
<span id="cb1-3">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n)</span>
<span id="cb1-4">censor_point <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(y, prop_censored)</span>
<span id="cb1-5">censored <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> censor_point</span>
<span id="cb1-6">y_obs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(censored, censor_point, y)</span>
<span id="cb1-7">y_dens <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">density</span>(y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> n)</span>
<span id="cb1-8">y_obs_dens <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">density</span>(y_obs, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> n)</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-11">df_y_dens <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dens_x =</span> y_dens<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x,</span>
<span id="cb1-12">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dens_y =</span> y_dens<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y,</span>
<span id="cb1-13">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">censor_point =</span> censor_point,</span>
<span id="cb1-14">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"true"</span>)</span>
<span id="cb1-15"></span>
<span id="cb1-16">df_y_dens_obs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dens_x =</span> y_obs_dens<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x,</span>
<span id="cb1-17">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dens_y =</span> y_obs_dens<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y,</span>
<span id="cb1-18">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">censor_point =</span> censor_point,</span>
<span id="cb1-19">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>)</span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-22">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.line =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rel</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)),</span>
<span id="cb1-23">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.border =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()))</span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> dens_x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> dens_y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df_y_dens, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>,</span>
<span id="cb1-27">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"True values"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dotted"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(df_y_dens_obs, dens_x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> censor_point), </span>
<span id="cb1-29">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>,</span>
<span id="cb1-30">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Observed values"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> censor_point, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Censor point"</span>), </span>
<span id="cb1-32">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_area</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(df_y_dens, dens_x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> censor_point),</span>
<span id="cb1-34">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#822D2F"</span>,</span>
<span id="cb1-35">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Censored values"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>  </span>
<span id="cb1-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb1-38">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"True values"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, </span>
<span id="cb1-39">                                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Observed values"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#375A6D"</span>, </span>
<span id="cb1-40">                                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Censor point"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, </span>
<span id="cb1-41">                                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Censored values"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#822D2F"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),  </span>
<span id="cb1-44">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-45">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-46">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://maxoosterwegel.com/posts/left-censored-models-showcase/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>so informally speaking, by virtue of the data being censored and not truncated we know the height of the probability mass and when we combine this information with the information from the uncensored observations, and the assumption we made on its distributional form we can ‘spread out’ the probability mass across the censored region and estimate the parameters of the latent/true data structure.</p>
<p>If we additionally simulate an effect of <img src="https://latex.codecogs.com/png.latex?x"> on <img src="https://latex.codecogs.com/png.latex?y"> and plot <img src="https://latex.codecogs.com/png.latex?x"> vs <img src="https://latex.codecogs.com/png.latex?y"> we can easily see that ignoring the censoring mechanism (or substituting by a constant value below the limit of detection as is often done – not shown) biases the estimate of the slope.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span></span>
<span id="cb2-2">prop_censored <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span></span>
<span id="cb2-3">b_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb2-4">sd <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb2-5"></span>
<span id="cb2-6">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n)</span>
<span id="cb2-7">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n, x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b_1, sd)</span>
<span id="cb2-8">censor_point <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(y, prop_censored)</span>
<span id="cb2-9">censored <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> censor_point</span>
<span id="cb2-10">y_obs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(censored, censor_point, y)</span>
<span id="cb2-11"></span>
<span id="cb2-12">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(y, y_obs, x, censor_point)</span></code></pre></div>
</div>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y_obs), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#375A6D'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(df, y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> censor_point),</span>
<span id="cb3-5">             <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#822D2F'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y_obs, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Observed values fit"</span>), </span>
<span id="cb3-7">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"solid"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"True values fit"</span>), </span>
<span id="cb3-9">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lm'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dotted"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb3-11">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"True values fit"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dotted"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Observed values fit"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"solid"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb3-13">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"True values fit"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Observed values fit"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expression</span>(x),</span>
<span id="cb3-15">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expression</span>(y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://maxoosterwegel.com/posts/left-censored-models-showcase/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="fitting-a-left-censored-model-using-r" class="level1">
<h1>Fitting a left censored model using R</h1>
<p>We can fit a model in <code>R</code> that accounts for the censoring mechanism by writing down the likelihood and passing it to <code>optim</code> to find the maximum:<sup>5</sup></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">log_lik <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(parameter_vector, x, y, l) {</span>
<span id="cb4-2">  a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> parameter_vector[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb4-3">  b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> parameter_vector[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb4-4">  sigma <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> parameter_vector[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb4-5">  </span>
<span id="cb4-6">  linear_predictor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x</span>
<span id="cb4-7">  </span>
<span id="cb4-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># you could also do this more explicitly with an indicator variable and a multiplication </span></span>
<span id="cb4-9">  ll_vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> l, </span>
<span id="cb4-10">                   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(y, linear_predictor, sigma, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb4-11">                   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pnorm</span>((l <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> linear_predictor)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>sigma, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb4-12">  </span>
<span id="cb4-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(ll_vec))</span>
<span id="cb4-14">}</span>
<span id="cb4-15"></span>
<span id="cb4-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initialize with a fit from the observed data, inits &lt;- runif(3) will also work for simple models</span></span>
<span id="cb4-17">initmod <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df)</span>
<span id="cb4-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(initmod), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(initmod)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sigma))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>(Intercept)           x       sigma 
 0.09927942  0.06638911  0.38652839 </code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">init <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(initmod), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(initmod)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sigma))</span>
<span id="cb6-2"></span>
<span id="cb6-3">mle <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">optim</span>(init, log_lik, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Inf</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Inf</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>.e<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-5</span>),</span>
<span id="cb6-4">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L-BFGS-B"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fnscale =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), </span>
<span id="cb6-5">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y_obs'</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">l =</span> censor_point)</span>
<span id="cb6-6">mle<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>par</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> (Intercept)            x        sigma 
0.0005055924 0.0974616424 0.5137657833 </code></pre>
</div>
</div>
<p>We can see that the procedure managed to recover the true values for <img src="https://latex.codecogs.com/png.latex?%5Csigma"> (= 0.5) and <img src="https://latex.codecogs.com/png.latex?%5Cbeta_1"> (= 0.1).</p>
<p>Of course there are also <code>R</code> packages that can do such a procedure for us. Both frequentist and Bayesian. Below an overview:</p>
<section id="survival" class="level3">
<h3 class="anchored" data-anchor-id="survival">{survival}</h3>
<p>In {survival} you can specify left censored models just as you would specify right censored models using the <code>Surv</code> object. The <code>censor_point</code> can also be a vector and thereby allow your observations to be censored at different levels/limits.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> survival<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">survreg</span>(survival<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Surv</span>(y_obs,</span>
<span id="cb8-2">                                      y_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> censor_point,</span>
<span id="cb8-3">                                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x,</span>
<span id="cb8-4">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df,</span>
<span id="cb8-5">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dist =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gaussian"</span>)</span>
<span id="cb8-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
survival::survreg(formula = survival::Surv(y_obs, y_obs &gt; censor_point, 
    type = "left") ~ 1 + x, data = df, dist = "gaussian")
                Value Std. Error      z      p
(Intercept)  0.000506   0.012272   0.04   0.97
x            0.097462   0.011836   8.23 &lt;2e-16
Log(scale)  -0.665992   0.020230 -32.92 &lt;2e-16

Scale= 0.514 

Gaussian distribution
Loglik(model)= -1587.6   Loglik(intercept only)= -1621.4
    Chisq= 67.57 on 1 degrees of freedom, p= 2e-16 
Number of Newton-Raphson Iterations: 3 
n= 2000 </code></pre>
</div>
</div>
<p>You can get the same result by specifying the left censoring as a special case of interval censoring:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> survival<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">survreg</span>(survival<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Surv</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(y_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> censor_point, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">999</span>, y_obs), </span>
<span id="cb10-2">                                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time2 =</span> censor_point,</span>
<span id="cb10-3">                                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">event =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(y_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> censor_point, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), </span>
<span id="cb10-4">                                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"interval"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x, </span>
<span id="cb10-5">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df,</span>
<span id="cb10-6">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dist =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gaussian"</span>)</span>
<span id="cb10-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
survival::survreg(formula = survival::Surv(time = ifelse(y_obs == 
    censor_point, -999, y_obs), time2 = censor_point, event = ifelse(y_obs == 
    censor_point, 3, 1), type = "interval") ~ 1 + x, data = df, 
    dist = "gaussian")
                Value Std. Error      z      p
(Intercept)  0.000506   0.012272   0.04   0.97
x            0.097462   0.011836   8.23 &lt;2e-16
Log(scale)  -0.665992   0.020230 -32.92 &lt;2e-16

Scale= 0.514 

Gaussian distribution
Loglik(model)= -1587.6   Loglik(intercept only)= -1621.4
    Chisq= 67.57 on 1 degrees of freedom, p= 2e-16 
Number of Newton-Raphson Iterations: 6 
n= 2000 </code></pre>
</div>
</div>
<p>There’s also a lognormal distribution available in {survival}.</p>
</section>
<section id="censreg" class="level3">
<h3 class="anchored" data-anchor-id="censreg">{censReg}</h3>
<p>{censReg} does not support varying censoring points, as the <code>left</code> argument only allows a constant, whereas {survival} allows this by specifying a <code>censor_point</code> vector.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> censReg<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">censReg</span>(y_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x, </span>
<span id="cb12-2">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df, </span>
<span id="cb12-3">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BHHH"</span>, </span>
<span id="cb12-4">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">left =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y_obs), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">right =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Inf</span>)</span>
<span id="cb12-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
censReg::censReg(formula = y_obs ~ 1 + x, left = min(df$y_obs), 
    right = Inf, data = df, method = "BHHH")

Observations:
         Total  Left-censored     Uncensored Right-censored 
          2000            600           1400              0 

Coefficients:
              Estimate Std. error t value  Pr(&gt; t)    
(Intercept)  0.0005067  0.0122142   0.041    0.967    
x            0.0974645  0.0119876   8.130 4.28e-16 ***
logSigma    -0.6659855  0.0209399 -31.805  &lt; 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

BHHH maximisation, 17 iterations
Return code 8: successive function values within relative tolerance limit (reltol)
Log-likelihood: -1587.58 on 3 Df</code></pre>
</div>
</div>
</section>
<section id="multilevel-left-censored-models" class="level2">
<h2 class="anchored" data-anchor-id="multilevel-left-censored-models">Multilevel left censored models</h2>
<p>Sometimes your data is more complicated and you want to specify different levels of your data. For example: a random intercept that specifies what subject or batch an observation belongs to. Your <code>R</code> package options are more limited then, as the frequentist approach now needs to additionally integrate over the random effects in the definition of the marginal likelihood.</p>
<p>The {survival} model does not support such models while {censReg} supports only a simple two-level random intercept model:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">samples_p_batch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb14-2">nr_batches <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> n<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>samples_p_batch</span>
<span id="cb14-3">sd_batch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb14-4"></span>
<span id="cb14-5">re_batch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(nr_batches, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sd_batch), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> samples_p_batch)</span>
<span id="cb14-6">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n, x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> re_batch, sd)</span>
<span id="cb14-7"></span>
<span id="cb14-8">censor_point <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(y, prop_censored)</span>
<span id="cb14-9">censored <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> censor_point</span>
<span id="cb14-10">y_obs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(censored, censor_point, y)</span>
<span id="cb14-11"></span>
<span id="cb14-12">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(y, y_obs, x, censor_point, </span>
<span id="cb14-13">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">index =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>samples_p_batch, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> nr_batches),</span>
<span id="cb14-14">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">batch_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nr_batches, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> samples_p_batch))</span></code></pre></div>
</div>
<section id="censreg-1" class="level3">
<h3 class="anchored" data-anchor-id="censreg-1">{censReg}</h3>
<p>To get such a two-level random intercept model to work in {censReg} we have to create a {plm} object first<sup>6</sup></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">pData <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> plm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pdata.frame</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>( <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"batch_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"index"</span>))</span>
<span id="cb15-2"></span>
<span id="cb15-3">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> censReg<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">censReg</span>(y_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x, </span>
<span id="cb15-4">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> pData, </span>
<span id="cb15-5">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BHHH"</span>, </span>
<span id="cb15-6">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">left =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y_obs), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">right =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Inf</span>)</span>
<span id="cb15-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
censReg::censReg(formula = y_obs ~ 1 + x, left = min(df$y_obs), 
    right = Inf, data = pData, method = "BHHH")

Observations:
         Total  Left-censored     Uncensored Right-censored 
          2000            600           1400              0 

Coefficients:
             Estimate Std. error t value  Pr(&gt; t)    
(Intercept) -0.091705   0.004090 -22.423  &lt; 2e-16 ***
x            0.083038   0.016855   4.927 8.37e-07 ***
logSigmaMu   0.454964   0.002405 189.172  &lt; 2e-16 ***
logSigmaNu  -0.474995   0.007687 -61.794  &lt; 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

BHHH maximisation, 150 iterations
Return code 4: Iteration limit exceeded (iterlim)
Log-likelihood: -1475.026 on 4 Df</code></pre>
</div>
</div>
</section>
<section id="glmmadaptive" class="level3">
<h3 class="anchored" data-anchor-id="glmmadaptive">{GLMMadaptive}</h3>
<p>One other frequentist package available for your left censored models is {GLMMadaptive}. In addition to your observed outcome, you need to specify a vector with an indicator variable that describes whether the observation was censored:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> GLMMadaptive<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mixed_model</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(y_obs, censored) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x, </span>
<span id="cb17-2">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">random =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>batch_id, </span>
<span id="cb17-3">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df,</span>
<span id="cb17-4">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> GLMMadaptive<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">censored.normal</span>())</span>
<span id="cb17-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
GLMMadaptive::mixed_model(fixed = cbind(y_obs, censored) ~ 1 + 
    x, random = ~1 | batch_id, data = df, family = GLMMadaptive::censored.normal())

Data Descriptives:
Number of Observations: 2000
Number of Groups: 20 

Model:
 family: censored normal
 link: identity 

Fit statistics:
   log.Lik      AIC      BIC
 -1196.614 2401.229 2405.212

Random effects covariance matrix:
             StdDev
(Intercept) 1.89308

Fixed effects:
            Estimate Std.Err z-value p-value
(Intercept)  -0.2812  0.4201 -0.6694 0.50326
x             0.0742  0.0126  5.8995 &lt; 1e-04

log(residual std. dev.):
  Estimate Std.Err
   -0.6983  0.0192

Integration:
method: adaptive Gauss-Hermite quadrature rule
quadrature points: 11

Optimization:
method: hybrid EM and quasi-Newton
converged: TRUE </code></pre>
</div>
</div>
<p>We can also use random slopes in GLMMadaptive. But only a single grouping factor (i.e., no nested (i.e.&nbsp;2+ levels) or crossed random effects designs) is <a href="https://cran.r-project.org/web/packages/GLMMadaptive/vignettes/GLMMadaptive.html">supported</a> at the moment. {GLMMadaptive} is relatively fast. Unfortunately, when I had to fit more than 20 of these models for projects at least one of those models had convergence issues/errors. But perhaps someone with more feel for optimizer parameters is more successful.</p>
<p>And contrary to {censReg} you can extract the random effects:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">GLMMadaptive<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ranef</span>(m) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  (Intercept)
1   0.3581646
2   1.2568000
3   0.7057757
4  -2.1809270
5  -0.6329443
6   3.2980978</code></pre>
</div>
</div>
</section>
<section id="brms-stan" class="level3">
<h3 class="anchored" data-anchor-id="brms-stan">{brms} / {STAN}</h3>
<p>For Bayesian software implementations the addition of random intercepts and slopes is less challenging, because it avoids the cumbersome integration. Similarly to {GLMMadaptive} we specify an additional indicator variable for our {brms} model, but this time left censoring is indicated by <img src="https://latex.codecogs.com/png.latex?-1"> (uncensored is <img src="https://latex.codecogs.com/png.latex?0"> in <code>brms</code> and <img src="https://latex.codecogs.com/png.latex?1"> indicates right censoring):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> brms<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(y_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cens</span>(censored) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>batch_id), </span>
<span id="cb21-2">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">censored =</span> censored <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), </span>
<span id="cb21-3">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2025</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb21-4">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">backend =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cmdstanr"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cores =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 1 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 2 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 3 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 4 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 2 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 2 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 3 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 3 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 4 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 4 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 2 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 2 finished in 27.7 seconds.
Chain 1 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 1 finished in 28.6 seconds.
Chain 4 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 4 finished in 30.8 seconds.
Chain 3 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 3 finished in 31.8 seconds.

All 4 chains finished successfully.
Mean chain execution time: 29.7 seconds.
Total execution time: 32.0 seconds.</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> Family: gaussian 
  Links: mu = identity; sigma = identity 
Formula: y_obs | cens(censored) ~ 1 + x + (1 | batch_id) 
   Data: dplyr::mutate(df, censored = censored * -1) (Number of observations: 2000) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup draws = 4000

Multilevel Hyperparameters:
~batch_id (Number of levels: 20) 
              Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sd(Intercept)     2.02      0.33     1.48     2.78 1.01      513      776

Regression Coefficients:
          Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
Intercept    -0.27      0.43    -1.19     0.54 1.01      408      511
x             0.07      0.01     0.05     0.10 1.00     1719     2001

Further Distributional Parameters:
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sigma     0.50      0.01     0.48     0.52 1.00     1585     1527

Draws were sampled using sample(hmc). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).</code></pre>
</div>
</div>
<p>If we print the actual STAN code we see familiar elements from our earlier likelihood:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1">brms<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stancode</span>(m)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>// generated with brms 2.22.0
functions {
}
data {
  int&lt;lower=1&gt; N;  // total number of observations
  vector[N] Y;  // response variable
  // censoring indicator: 0 = event, 1 = right, -1 = left, 2 = interval censored
  array[N] int&lt;lower=-1,upper=2&gt; cens;
  int&lt;lower=1&gt; K;  // number of population-level effects
  matrix[N, K] X;  // population-level design matrix
  int&lt;lower=1&gt; Kc;  // number of population-level effects after centering
  // data for group-level effects of ID 1
  int&lt;lower=1&gt; N_1;  // number of grouping levels
  int&lt;lower=1&gt; M_1;  // number of coefficients per level
  array[N] int&lt;lower=1&gt; J_1;  // grouping indicator per observation
  // group-level predictor values
  vector[N] Z_1_1;
  int prior_only;  // should the likelihood be ignored?
}
transformed data {
  // indices of censored data
  int Nevent = 0;
  int Nrcens = 0;
  int Nlcens = 0;
  array[N] int Jevent;
  array[N] int Jrcens;
  array[N] int Jlcens;
  matrix[N, Kc] Xc;  // centered version of X without an intercept
  vector[Kc] means_X;  // column means of X before centering
  // collect indices of censored data
  for (n in 1:N) {
    if (cens[n] == 0) {
      Nevent += 1;
      Jevent[Nevent] = n;
    } else if (cens[n] == 1) {
      Nrcens += 1;
      Jrcens[Nrcens] = n;
    } else if (cens[n] == -1) {
      Nlcens += 1;
      Jlcens[Nlcens] = n;
    }
  }
  for (i in 2:K) {
    means_X[i - 1] = mean(X[, i]);
    Xc[, i - 1] = X[, i] - means_X[i - 1];
  }
}
parameters {
  vector[Kc] b;  // regression coefficients
  real Intercept;  // temporary intercept for centered predictors
  real&lt;lower=0&gt; sigma;  // dispersion parameter
  vector&lt;lower=0&gt;[M_1] sd_1;  // group-level standard deviations
  array[M_1] vector[N_1] z_1;  // standardized group-level effects
}
transformed parameters {
  vector[N_1] r_1_1;  // actual group-level effects
  real lprior = 0;  // prior contributions to the log posterior
  r_1_1 = (sd_1[1] * (z_1[1]));
  lprior += student_t_lpdf(Intercept | 3, 0.1, 2.5);
  lprior += student_t_lpdf(sigma | 3, 0, 2.5)
    - 1 * student_t_lccdf(0 | 3, 0, 2.5);
  lprior += student_t_lpdf(sd_1 | 3, 0, 2.5)
    - 1 * student_t_lccdf(0 | 3, 0, 2.5);
}
model {
  // likelihood including constants
  if (!prior_only) {
    // initialize linear predictor term
    vector[N] mu = rep_vector(0.0, N);
    mu += Intercept + Xc * b;
    for (n in 1:N) {
      // add more terms to the linear predictor
      mu[n] += r_1_1[J_1[n]] * Z_1_1[n];
    }
    // vectorized log-likelihood contributions of censored data
    target += normal_lpdf(Y[Jevent[1:Nevent]] | mu[Jevent[1:Nevent]], sigma);
    target += normal_lccdf(Y[Jrcens[1:Nrcens]] | mu[Jrcens[1:Nrcens]], sigma);
    target += normal_lcdf(Y[Jlcens[1:Nlcens]] | mu[Jlcens[1:Nlcens]], sigma);
  }
  // priors including constants
  target += lprior;
  target += std_normal_lpdf(z_1[1]);
}
generated quantities {
  // actual population-level intercept
  real b_Intercept = Intercept - dot_product(means_X, b);
}</code></pre>
</div>
</div>
<p>With {brms} the possibilities are almost endless<sup>7</sup> and fortunately its speed has also improved the last few years. My censored models usually converge out of the box, even with multiple random intercept terms. And with some reasonably strong priors I’ve also had success with high proportions of censored data (say &gt;80%).</p>
</section>
<section id="mcmcglmm" class="level3">
<h3 class="anchored" data-anchor-id="mcmcglmm">{MCMCglmm}</h3>
<p>{MCMCglmm} also supports left censored multilevel (&gt;two-level?) models. The random effect notation is a bit <a href="https://stat.ethz.ch/pipermail/r-sig-mixed-models/2013q1/019896.html">different</a> though. The intercept is varying by subject here (random intercept), <code>random = ~us(1+fixed_effect):cluster</code> gives a random intercept/slope model with estimated covariance, and <code>random = ~idh(1+fixed_effect):cluster</code> is the same but with the covariance set to 0. We can specify a left censored outcome by creating two variables. If left censored, <code>y_obs_min</code> is <code>-Inf</code> and <code>y_obs_max</code> takes on the value of the censoring point, in the other, non censored cases <code>y_obs_min</code> and <code>y_obs_max</code> are identical and take on the observed value:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(MCMCglmm)</span>
<span id="cb27-2"></span>
<span id="cb27-3">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> MCMCglmm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MCMCglmm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(y_obs_min, y_obs_max) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x , </span>
<span id="cb27-4">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">random =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> batch_id, </span>
<span id="cb27-5">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cengaussian"</span>, </span>
<span id="cb27-6">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb27-7">                          dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_obs_min =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(censored <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Inf</span>, y_obs),</span>
<span id="cb27-8">                                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_obs_max =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(censored <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, censor_point, y_obs)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb27-9">                          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(),</span>
<span id="cb27-10">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nitt =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">thin =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">burnin =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>,</span>
<span id="cb27-11">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
 Iterations = 10001:20000
 Thinning interval  = 1
 Sample size  = 10000 

 DIC: 2077.777 

 G-structure:  ~batch_id

         post.mean l-95% CI u-95% CI eff.samp
batch_id     4.123    1.728    7.005     3863

 R-structure:  ~units

      post.mean l-95% CI u-95% CI eff.samp
units    0.2479   0.2298   0.2675     2027

 Location effects: cbind(y_obs_min, y_obs_max) ~ 1 + x 

            post.mean l-95% CI u-95% CI eff.samp  pMCMC    
(Intercept)  -0.27949 -1.11097  0.68806     9673  0.518    
x             0.07432  0.04962  0.09862     4620 &lt;1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1</code></pre>
</div>
</div>
<p>The G structure <a href="https://stats.stackexchange.com/questions/32994/what-are-r-structure-g-structure-in-a-glmm">refers</a> to the random effect structure, while the R structure is the residual structure.</p>
<p>I think by default you do not get easy interpretable scale parameters, but you can <a href="https://stat.ethz.ch/pipermail/r-sig-mixed-models/2013q2/020390.html">obtain</a> an estimate by taking the square root of the posterior distribution of the (co)variance matrices:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(m<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>VCV))[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>              Mean          SD     Naive SE Time-series SE
batch_id 2.0001114 0.350291352 3.502914e-03   0.0057400762
units    0.4978472 0.009719887 9.719887e-05   0.0002157377</code></pre>
</div>
</div>
</section>
<section id="inla" class="level3">
<h3 class="anchored" data-anchor-id="inla">{INLA}</h3>
<p>Lastly I want to mention the {INLA} package. It seems like it’s neither purely frequentist nor fully Bayesian but instead <em>approximates</em> the posterior marginals. It’s mostly used in spatial statistics so perhaps this makes it the ideal candidate for censored concentration measurements with a spatial element, say a measurement campaign. Its interface is slightly unusual for the <code>R</code> regression packages I’m familiar with, but it is very, very fast! Many censored likelihood families are supported, but unfortunately the Gaussian family is not one of them:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(INLA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inla.models</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>likelihood) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb32-2">    purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">keep</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>stringr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(.x, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"surv"</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "gammasurv"        "gammajwsurv"      "qloglogisticsurv" "lognormalsurv"   
[5] "exponentialsurv"  "weibullsurv"      "loglogisticsurv"  "fmrisurv"        
[9] "gompertzsurv"    </code></pre>
</div>
</div>
<p>A censored gamma and lognormal family<sup>8</sup> are present though and these are also useful in environmental studies.</p>
<p>You specify censoring using a <code>inla.surv</code> where left censoring is coded as <img src="https://latex.codecogs.com/png.latex?2"> and uncensored observations get a <img src="https://latex.codecogs.com/png.latex?1"> indicator:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(INLA)</span>
<span id="cb34-2"></span>
<span id="cb34-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># simulate lognormal data</span></span>
<span id="cb34-4">samples_p_batch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb34-5">nr_batches <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> n<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>samples_p_batch</span>
<span id="cb34-6">sd_batch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb34-7"></span>
<span id="cb34-8">re_batch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(nr_batches, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sd_batch), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> samples_p_batch)</span>
<span id="cb34-9">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rlnorm</span>(n, x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> re_batch, sd)</span>
<span id="cb34-10"></span>
<span id="cb34-11">censor_point <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(y, prop_censored)</span>
<span id="cb34-12">censored <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> censor_point</span>
<span id="cb34-13">y_obs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(censored, censor_point, y)</span>
<span id="cb34-14"></span>
<span id="cb34-15">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(y, y_obs, x, censor_point, </span>
<span id="cb34-16">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">index =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>samples_p_batch, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> nr_batches),</span>
<span id="cb34-17">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">batch_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nr_batches, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> samples_p_batch)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb34-18">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">censored =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(censored <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb34-19"></span>
<span id="cb34-20">surv_obj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inla.surv</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y_obs, df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>censored)</span>
<span id="cb34-21">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inla</span>(surv_obj <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">f</span>(batch_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"iid"</span>), </span>
<span id="cb34-22">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df, </span>
<span id="cb34-23">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lognormal.surv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control.compute =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">config =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb35-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
   c("inla.core(formula = formula, family = family, contrasts = contrasts, 
   ", " data = data, quantiles = quantiles, E = E, offset = offset, ", " 
   scale = scale, weights = weights, Ntrials = Ntrials, strata = strata, 
   ", " lp.scale = lp.scale, link.covariates = link.covariates, verbose = 
   verbose, ", " lincomb = lincomb, selection = selection, control.compute 
   = control.compute, ", " control.predictor = control.predictor, 
   control.family = control.family, ", " control.inla = control.inla, 
   control.fixed = control.fixed, ", " control.mode = control.mode, 
   control.expert = control.expert, ", " control.hazard = control.hazard, 
   control.lincomb = control.lincomb, ", " control.update = 
   control.update, control.lp.scale = control.lp.scale, ", " 
   control.pardiso = control.pardiso, only.hyperparam = only.hyperparam, 
   ", " inla.call = inla.call, inla.arg = inla.arg, num.threads = 
   num.threads, ", " keep = keep, working.directory = working.directory, 
   silent = silent, ", " inla.mode = inla.mode, safe = FALSE, debug = 
   debug, .parent.frame = .parent.frame)" ) 
Time used:
    Pre = 0.419, Running = 0.403, Post = 0.111, Total = 0.933 
Fixed effects:
             mean    sd 0.025quant 0.5quant 0.975quant  mode kld
(Intercept) 0.374 0.493     -0.613    0.379      1.335 0.378   0
x           0.098 0.013      0.073    0.098      0.123 0.098   0

Random effects:
  Name    Model
    batch_id IID model

Model hyperparameters:
                                              mean    sd 0.025quant 0.5quant
Precision for the lognormalsurv observations 3.985 0.153      3.679    3.987
Precision for batch_id                       0.224 0.074      0.105    0.215
                                             0.975quant  mode
Precision for the lognormalsurv observations      4.280 4.001
Precision for batch_id                            0.392 0.198

Marginal log-Likelihood:  -3353.37 
 is computed 
Posterior summaries for the linear predictor and the fitted values are computed
(Posterior marginals needs also 'control.compute=list(return.marginals.predictor=TRUE)')</code></pre>
</div>
</div>
<p>The random effects estimates are expressed on the precision scale but you can do the following to obtain the variance of the random effects on a familiar scale:<sup>9</sup></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1">v1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> m <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pluck</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"internal.marginals.hyperpar"</span>, </span>
<span id="cb37-2">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Log precision for batch_id"</span>)</span>
<span id="cb37-3">v2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> m <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pluck</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"internal.marginals.hyperpar"</span>, </span>
<span id="cb37-4">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Log precision for the lognormalsurv observations"</span>)</span>
<span id="cb37-5"></span>
<span id="cb37-6">v1p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inla.tmarginal</span>(<span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(x), v1) </span>
<span id="cb37-7">v2p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inla.tmarginal</span>(<span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(x), v2)</span>
<span id="cb37-8"></span>
<span id="cb37-9">r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(</span>
<span id="cb37-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inla.zmarginal</span>(v1p) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"batch_id"</span>),</span>
<span id="cb37-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inla.zmarginal</span>(v2p) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"residual"</span>))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1"> r <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb38-2">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(mean))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 8
   mean      sd quant0.025 quant0.25 quant0.5 quant0.75 quant0.975 variable
  &lt;dbl&gt;   &lt;dbl&gt;      &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;   
1 2.23  1.77         2.56      3.73     4.63      5.87       9.41  batch_id
2 0.501 0.00965      0.234     0.245    0.251     0.258      0.272 residual</code></pre>
</div>
</div>
<p>You can also access the posterior through <code>INLA::inla.posterior.sample</code>.</p>
<p>Compared to {brms}, {INLA} needs much stronger priors on random intercepts in a censored (lognormal) model in my experience. I have yet to encounter a real-life scenario where it could reliably do with a noninformative prior. Perhaps this is simply a consequence of the lognormal family or the combination of the lognormal family and some parameter space definition difference I’m not aware of, but I often have had to specify priors like these</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb40-1">halfcauchy  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"expression:</span></span>
<span id="cb40-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma = exp(-theta/2);</span></span>
<span id="cb40-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  gamma = 0.1;</span></span>
<span id="cb40-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  log_dens = log(2) - log(pi) - log(gamma);</span></span>
<span id="cb40-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  log_dens = log_dens - log(1 + (sigma / gamma)^2);</span></span>
<span id="cb40-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  log_dens = log_dens - log(2) - theta / 2;</span></span>
<span id="cb40-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  return(log_dens);</span></span>
<span id="cb40-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb40-9">hcpriorlist <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prec =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prior =</span> halfcauchy))</span>
<span id="cb40-10"></span>
<span id="cb40-11">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inla</span>(surv_obj <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">f</span>(batch_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"iid"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hyper =</span> hcpriorlist), </span>
<span id="cb40-12">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lognormal.surv"</span>, </span>
<span id="cb40-13">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control.compute =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">config =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span></code></pre></div>
</div>
<p>for good frequentist coverage properties – with less strong priors there would be huge outliers where some simulations had an estimated mean a couple magnitudes higher.</p>
</section>
</section>
<section id="other-packages" class="level2">
<h2 class="anchored" data-anchor-id="other-packages">Other packages</h2>
<p>There are <a href="https://cran.r-project.org/web/views/MixedModels.html">other packages available</a> to fit these kinds of models that I have not covered here: {nlmixr2}, {ARpLMEC}, {lme4cens}, {gamlss} (supposedly also multilevel?), and {lmec} but they are either minimally used and validated<sup>10</sup>, or were somewhat clunky to use for me. There’s also talks to support censored regression models in <a href="https://github.com/glmmTMB/glmmTMB/issues/690">{glmmTMB}</a>. And there’s the {AER} package, but it seems like that is just a <a href="https://m-clark.github.io/models-by-example/tobit.html">wrapper</a> for the {survival} library with less functionality (i.e.&nbsp;no varying censoring points).</p>



</section>
</section>


<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-gelman2006data" class="csl-entry">
Gelman, A., and J. Hill. 2006. <em>Data Analysis Using Regression and Multilevel/Hierarchical Models</em>. Analytical Methods for Social Research. Cambridge University Press. <a href="https://sites.stat.columbia.edu/gelman/arm/">https://sites.stat.columbia.edu/gelman/arm/</a>.
</div>
<div id="ref-gelman2013bayesian" class="csl-entry">
Gelman, Andrew, John B. Carlin, Hal S. Stern, David B. Dunson, Akti Vehtari, and Donald B. Rubin. 2013. <em>Bayesian Data Analysis</em>. Third. Chapman &amp; Hall/CRC Texts in Statistical Science Series. CRC. <a href="https://stat.columbia.edu/~gelman/book/">https://stat.columbia.edu/~gelman/book/</a>.
</div>
<div id="ref-gelman2021regression" class="csl-entry">
Gelman, Andrew, Jennifer Hill, and Aki Vehtari. 2021. <em>Regression and Other Stories</em>. Cambridge University Press. <a href="https://avehtari.github.io/ROS-Examples/">https://avehtari.github.io/ROS-Examples/</a>.
</div>
<div id="ref-helsel2005nondetects" class="csl-entry">
Helsel, D. R. 2005. <em>Nondetects and Data Analysis: Statistics for Censored Environmental Data</em>. Statistics in Practice. Wiley. <a href="https://books.google.nl/books?id=krwQAQAAIAAJ">https://books.google.nl/books?id=krwQAQAAIAAJ</a>.
</div>
<div id="ref-helsel_fabricating_2006" class="csl-entry">
Helsel, Dennis R. 2006. <span>“Fabricating Data: How Substituting Values for Nondetects Can Ruin Results, and What Can Be Done about It.”</span> <em>Chemosphere</em>, Environmental <span>Chemistry</span>, 65 (11): 2434–39. <a href="https://doi.org/10.1016/j.chemosphere.2006.04.051">https://doi.org/10.1016/j.chemosphere.2006.04.051</a>.
</div>
<div id="ref-senn2012ghosts" class="csl-entry">
Senn, Stephen, Nick Holford, and Hans Hockey. 2012. <span>“The Ghosts of Departed Quantities: Approaches to Dealing with Observations Below the Limit of Quantitation.”</span> <em>Statistics in Medicine</em> 31 (30): 4280–95. <a href="https://doi.org/10.1002/sim.5515">https://doi.org/10.1002/sim.5515</a>.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Not to be confused with left truncation. In both truncation and censoring no information on the value of the observation beyond the truncation/censoring point is available. However, with censoring we know the number of observations beyond this point contrary to truncation where we do not observe any of the dependent variable or covariates – the entry is simply missing from your data table. See for example <span class="citation" data-cites="senn2012ghosts">Senn, Holford, and Hockey (2012)</span> and <span class="citation" data-cites="gelman2013bayesian">Andrew Gelman et al. (2013)</span>, p.224 for a more in depth explanation on the statistical connections between truncation and censoring.↩︎</p></li>
<li id="fn2"><p>While I have not encountered it myself, I have read that (some) mass spectrometry instruments can also reach saturation. This will not be the topic of this post. I think though that saturation would introduce an additional right censoring mechanism or some type of non-linear effect – again not sure how this gets handled in practice.↩︎</p></li>
<li id="fn3"><p>In this post we assume the limit of detection is known, but this need not always be the case. See for example <span class="citation" data-cites="gelman2013bayesian">Andrew Gelman et al. (2013)</span>, p.226 on how to handle this.↩︎</p></li>
<li id="fn4"><p>The classical tobit model from economics <a href="https://rdrr.io/cran/AER/man/tobit.html">assumes a normal distribution for outcome variable with left censoring at 0</a>.↩︎</p></li>
<li id="fn5"><p>Via <span class="citation" data-cites="gelman2006data">A. Gelman and Hill (2006)</span> and <a href="https://m-clark.github.io/models-by-example/tobit.html">Michael Clark</a> his post.↩︎</p></li>
<li id="fn6"><p>Though there seem to be some questions on if {censReg} is doing it <a href="https://stat.ethz.ch/pipermail/r-sig-mixed-models/2021q3/029715.html">correctly</a> (per the author of the {GLMMadaptive} package).↩︎</p></li>
<li id="fn7"><p>Unfortunately <a href="https://github.com/paul-buerkner/brms/issues/565">no censored predictors yet</a>.↩︎</p></li>
<li id="fn8"><p>Not entirely sure if the random effects also follow a lognormal distribution here. My simulations (not shown) suggest a lognormal normal distribution so this would be different from log transforming the outcome and using our {brms} model.↩︎</p></li>
<li id="fn9"><p>See for example [https://becarioprecario.bitbucket.io/inla-gitbook/ch-survival.html] and [https://www.paulamoraga.com/book-geospatial/sec-inla.html] for more details on how to work with {INLA}.↩︎</p></li>
<li id="fn10"><p>We are probably overconfident in statistical software and do not evaluate them sufficiently before using them in our work. See <a href="https://www.alexpghayes.com/post/2019-06-07_testing-statistical-software/">this post from Alex Hayes</a> for some thoughts on checking statistical software.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{j._oosterwegel2025,
  author = {J. Oosterwegel, Max},
  title = {Fitting Left Censored Models Using {R}},
  date = {2025-04-21},
  url = {https://maxoosterwegel.com/posts/left-censored-models-showcase/},
  doi = {placeholder},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-j._oosterwegel2025" class="csl-entry quarto-appendix-citeas">
J. Oosterwegel, Max. 2025. <span>“Fitting Left Censored Models Using
R.”</span> April 21, 2025. <a href="https://doi.org/placeholder">https://doi.org/placeholder</a>.
</div></div></section></div> ]]></description>
  <guid>https://maxoosterwegel.com/posts/left-censored-models-showcase/</guid>
  <pubDate>Sun, 20 Apr 2025 22:00:00 GMT</pubDate>
</item>
</channel>
</rss>
